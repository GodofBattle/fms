{
    "procedure": {
        "spGetGroupListByUserId": "CALL sp_getGroupListByUserId(?);",
        "spGetSubGroupList": "CALL sp_getSubGroupList(?);"
    },
    "server": {
        "info": "SELECT pcu.name AS item, null AS path, CONVERT(pcu.totalUsage, DECIMAL(5,2)) AS item_usage, null AS total_size, null AS use_size, pcu.update_date AS update_time FROM pf_cpu_usage pcu UNION ALL SELECT pmu.name AS item, null AS path, CONVERT(pmu.totalUsage, DECIMAL(5,2)) AS item_usage, null AS total_size, null AS use_size, pmu.update_date AS update_time FROM pf_mem_usage pmu UNION ALL SELECT 'disk' AS item, pdu.name AS path, CONVERT(pdu.totalUsage, DECIMAL(5,2)) AS item_usage, CONVERT(pdu.totalSize / 1024, DECIMAL(8, 0)) AS total_size, CONVERT(pdu.useSize / 1024, DECIMAL(8, 2)) AS use_size, pdu.update_date AS update_time FROM pf_disk_usage pdu;"
    },
    "tree": {
        "normal": "SELECT 1 AS sorting, CASE group_name WHEN '기타' THEN 1 ELSE 1 END AS group_sorting, CONCAT('G_', group_id) AS id, CONCAT('G_', IFNULL(p_group_id, 0)) AS pid, group_name AS name, current_level AS level, 'group' AS icon, 'Y' AS isAvailable, imageName, null AS equip_code, null AS equip_type, -1 AS pd_equip_id, 'group' AS io_type, null AS isAttention FROM cn_group WHERE b_delete = 'N' UNION ALL SELECT 2 AS sorting, 1 AS group_sorting, CONCAT('E_', ce.equip_id) AS id, CONCAT('G_', ce.group_id) AS pid, ce.equip_name AS name, ce.current_level AS level, pc.description AS icon, ce.b_use AS isAvailable, ce.imageName, pe.equip_code, CASE pc.disp_unit WHEN '공조' THEN '공조' WHEN '보안' THEN '보안' WHEN '소방' THEN '소방' WHEN '전기' THEN '전기' WHEN '환경' THEN '환경' ELSE '기타' END AS equip_type, IFNULL(pe.pd_equip_id, -1) AS pd_equip_id, IFNULL((SELECT pc2.code_name FROM pd_code pc2 WHERE pc2.code_id = pe.io_type_code), 'VIRTUAL') AS io_type, (CASE WHEN (SELECT COUNT(1) FROM cn_notify_equipment WHERE equip_id = ce.equip_id) = 0 THEN 'N' ELSE 'Y' END) AS isAttention FROM cn_equipment ce LEFT JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id LEFT JOIN pd_code pc ON pc.code_id = pe.equip_code LEFT JOIN cn_notify_equipment cne ON cne.equip_id = ce.equip_id WHERE ce.b_delete = 'N' ORDER BY sorting, group_sorting, name;",
        "onlyGroup": "SELECT 1 AS sorting, CASE group_name WHEN '기타' THEN 1 ELSE 1 END AS group_sorting, CONCAT('G_', group_id) AS id, CONCAT('G_', IFNULL(p_group_id, 0)) AS pid, group_name AS name, current_level AS level, 'group' AS icon, imageName, null AS equip_code, -1 AS pd_equip_id, depth FROM cn_group WHERE b_delete = 'N' AND FIND_IN_SET(group_id, ?) ORDER BY sorting, group_sorting, name",
        "group": "SELECT 1 AS sorting, CASE group_name WHEN '기타' THEN 1 ELSE 1 END AS group_sorting, CONCAT('G_', group_id) AS id, CONCAT('G_', IFNULL(p_group_id, 0)) AS pid, group_name AS name, current_level AS level, 'group' AS icon, 'Y' AS isAvailable, imageName, null AS equip_code, null AS equip_type, -1 AS pd_equip_id, 'group' AS io_type, null AS isAttention FROM cn_group WHERE b_delete = 'N' AND FIND_IN_SET(group_id, ?) UNION ALL SELECT 2 AS sorting, 1 AS group_sorting, CONCAT('E_', ce.equip_id) AS id, CONCAT('G_', ce.group_id) AS pid, ce.equip_name AS name, ce.current_level AS level, pc.description AS icon, ce.b_use AS isAvailable, ce.imageName, pe.equip_code, CASE pc.disp_unit WHEN '공조' THEN '공조' WHEN '보안' THEN '보안' WHEN '소방' THEN '소방' WHEN '전기' THEN '전기' WHEN '환경' THEN '환경' ELSE '기타' END AS equip_type, IFNULL(pe.pd_equip_id, -1) AS pd_equip_id, IFNULL((SELECT pc2.code_name FROM pd_code pc2 WHERE pc2.code_id = pe.io_type_code), 'VIRTUAL') AS io_type, (CASE WHEN (SELECT COUNT(1) FROM cn_notify_equipment WHERE equip_id = ce.equip_id) = 0 THEN 'N' ELSE 'Y' END) AS isAttention FROM cn_equipment ce LEFT JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id LEFT JOIN pd_code pc ON pc.code_id = pe.equip_code LEFT JOIN cn_notify_equipment cne ON cne.equip_id = ce.equip_id WHERE ce.b_delete = 'N' AND FIND_IN_SET(ce.group_id, ?) ORDER BY sorting, group_sorting, name;",
        "sensor": "SELECT 3 AS sorting, 1 AS group_sorting, CONCAT('S_', cs.sensor_id) AS id, CONCAT('E_', cs.equip_id) AS pid, cs.sensor_name AS name, cs.current_level AS level, pc.description AS icon, IF(ce.b_use = 'N', 'N', cs.b_use) AS isAvailable, ce.imageName AS imageName, null AS equip_code, null AS equip_type, cs.sensor_code AS sensor_code, IFNULL(ce.pd_equip_id, -1) AS pd_equip_id, 'sensor' AS io_type, null AS isAttention, SUBSTRING(cs.sensor_type, 1, 1) AS sensor_type FROM cn_sensor cs JOIN cn_equipment ce ON cs.equip_id = ce.equip_id LEFT JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id LEFT JOIN pd_code pc ON pc.code_id = pe.equip_code WHERE cs.b_delete = 'N' AND FIND_IN_SET(ce.group_id, ?) ORDER BY sorting, group_sorting, (CASE WHEN sorting = 3 THEN cs.sensor_id END), (CASE WHEN sorting < 3 THEN cs.sensor_name END);",
        "sensorsByEquipmentId": "SELECT 3 AS sorting, 1 AS group_sorting, CONCAT('S_', cs.sensor_id) AS id, CONCAT('E_', cs.equip_id) AS pid, cs.sensor_name AS name, cs.current_level AS level, pc.description AS icon, IF(ce.b_use = 'N', 'N', cs.b_use) AS isAvailable, ce.imageName AS imageName, null AS equip_code, null AS equip_type, cs.sensor_code AS sensor_code, IFNULL(ce.pd_equip_id, -1) AS pd_equip_id, 'sensor' AS io_type, null AS isAttention, SUBSTRING(cs.sensor_type, 1, 1) AS sensor_type FROM cn_sensor cs JOIN cn_equipment ce ON cs.equip_id = ce.equip_id LEFT JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id LEFT JOIN pd_code pc ON pc.code_id = pe.equip_code WHERE cs.b_delete = 'N' AND ce.equip_id = ? ORDER BY sorting, group_sorting, (CASE WHEN sorting = 3 THEN cs.sensor_id END), (CASE WHEN sorting < 3 THEN cs.sensor_name END);",
        "code": "SELECT 1 AS sorting, 1 AS group_sorting, CONCAT('G_', pc.code_id) AS id, 'G_0' AS pid, pc.code_name AS name, MAX(ce.current_level) AS level, pc.description AS icon, ce.b_use AS isAvailable, null AS imageName, null AS equip_code, IFNULL(pc.disp_unit, '기타') AS equip_type, -1 AS pd_equip_id FROM pd_code pc JOIN pd_equipment pe ON pc.code_id = pe.equip_code JOIN cn_equipment ce ON pe.pd_equip_id = ce.pd_equip_id WHERE pc.code_type = 'E' AND ce.b_delete = 'N' AND FIND_IN_SET(ce.group_id, ?) GROUP BY pe.equip_code UNION ALL SELECT 2 AS sorting, 1 AS group_sorting, CONCAT('E_', ce.equip_id) AS id, CONCAT('G_', pe.equip_code) AS pid, ce.equip_name AS name, ce.current_level AS level, pc.description AS icon, ce.b_use AS isAvailable, ce.imageName, pe.equip_code, IFNULL(pc.disp_unit, '기타') AS equip_type, IFNULL(pe.pd_equip_id, -1) AS pd_equip_id FROM cn_equipment ce LEFT JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id JOIN pd_code pc ON pe.equip_code = pc.code_id WHERE pc.code_type = 'E' AND ce.b_delete = 'N' AND FIND_IN_SET(ce.group_id, ?) ORDER BY sorting, group_sorting, name;",
        "pdCode": "SELECT 1 AS sorting, code_type AS id, 'G_0' AS pid, code_type AS name, 'group' AS icon FROM pd_code UNION SELECT 2 AS sorting, code_id AS id, code_type pid, IF(code_name = '', code_id, CONCAT(code_id, ' | ', code_name)) AS name, IF(code_id LIKE 'E0%', description, 'rack') AS icon FROM pd_code;",
        "pdEquipment": "SELECT 1 AS sorting, pc.code_id AS id, 'root' AS pid, description AS icon, CONCAT(code_id, ' | ', code_name) AS name, code_name AS model_name, code_type AS io_type_name, FALSE AS has_modbus FROM pd_code pc WHERE pc.code_type = 'E' GROUP BY pc.code_id UNION SELECT 2 AS sorting, pe.pd_equip_id AS id, pc.code_id AS pid, description AS icon, CASE WHEN pe.equip_name = '' THEN '(설비명 미지정)' ELSE pe.equip_name END AS name, pe.equip_model_name AS model_name, (SELECT code_name FROM pd_code pc WHERE pe.io_type_code = pc.code_id) AS io_type_name, CASE pe.io_type_code WHEN 'I0001' THEN TRUE WHEN 'I0005' THEN TRUE WHEN 'I0006' THEN TRUE ELSE FALSE END AS has_modbus FROM pd_equipment pe JOIN pd_code pc ON pe.equip_code = pc.code_id ORDER BY sorting, name;",
        "filtering": {
            "byEquipmentIdAndSensorName": "SELECT 1 AS sorting, CASE cg.group_name WHEN '기타' THEN 1 ELSE 1 END AS group_sorting, CONCAT('G_', cg.group_id) AS id, CONCAT('G_', IFNULL(cg.p_group_id, 0)) AS pid, cg.group_name AS name, cg.current_level AS level, 'group' AS icon, 'Y' AS isAvailable, cg.imageName, NULL AS equip_code, NULL AS equip_type, -1 AS pd_equip_id, 'group' AS io_type, NULL AS isAttention FROM cn_group cg JOIN cn_equipment ce ON cg.group_id = ce.group_id WHERE cg.b_delete = 'N' AND ce.equip_id = ? UNION ALL SELECT 2 AS sorting, 1 AS group_sorting, CONCAT('E_', ce.equip_id) AS id, CONCAT('G_', ce.group_id) AS pid, ce.equip_name AS name, ce.current_level AS level, pc.description AS icon, ce.b_use AS isAvailable, ce.imageName, pe.equip_code, CASE pc.disp_unit WHEN '공조' THEN '공조' WHEN '보안' THEN '보안' WHEN '소방' THEN '소방' WHEN '전기' THEN '전기' WHEN '환경' THEN '환경' ELSE '기타' END AS equip_type, IFNULL(pe.pd_equip_id, -1) AS pd_equip_id, IFNULL((SELECT pc2.code_name FROM pd_code pc2 WHERE pc2.code_id = pe.io_type_code), 'VIRTUAL') AS io_type, NULL AS isAttention FROM cn_equipment ce LEFT JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id LEFT JOIN pd_code pc ON pc.code_id = pe.equip_code WHERE ce.b_delete = 'N' AND ce.equip_id = ? UNION ALL SELECT 3 AS sorting, 1 AS group_sorting, CONCAT('S_', cs.sensor_id) AS id, CONCAT('E_', cs.equip_id) AS pid, cs.sensor_name AS name, cs.current_level AS level, NULL AS icon, cs.b_use AS isAvailable, '0' AS imageName, NULL AS equip_code, NULL AS equip_type, NULL AS pd_equip_id, NULL AS io_type, NULL AS isAttention FROM cn_sensor cs WHERE cs.equip_id = ? AND cs.sensor_name LIKE ? AND cs.b_delete = 'N' AND cs.b_use = 'Y' ORDER BY sorting, group_sorting, name;"
        }
    },
    "ac_event_accept": {
        "insert": "INSERT INTO ac_event_accept(user_id, equip_id) VALUES (?, ?);",
        "read": "SELECT equip_id FROM ac_event_accept WHERE ?;",
        "delete": "DELETE FROM ac_event_accept WHERE ?;"
    },
    "ac_user": {
        "get": "SELECT *, pc.code_name AS user_level_code_name FROM ac_user au JOIN pd_code pc ON au.user_level_code = pc.code_id WHERE au.user_id = ? AND au.b_use = 'Y';",
        "info": "SELECT user_id AS userId, name AS userName, IFNULL(FROM_BASE64(au.password), au.password) AS userPw, user_level_code AS userLevel, mobile AS userMobile, email AS userEmail, memo AS userMemo, department_code AS userDept, IFNULL(basic_group_id, 1) AS startGroupId, IFNULL(cg.group_name, '알 수 없음') AS startGroupName, SUBSTRING(alarm_type_enable, 1, 1) AS AlarmTypePopup, SUBSTRING(alarm_type_enable, 2, 1) AS AlarmTypeSMS, SUBSTRING(alarm_type_enable, 3, 1) AS AlarmTypeEmail, SUBSTRING(event_enable, 1, 1) AS ThresholdAlarmRequirement, SUBSTRING(event_enable, 2, 1) AS CommunicationAlarmRequirement, SUBSTRING(week_enable, 1, 1) AS AlarmWeekMon, SUBSTRING(week_enable, 2, 1) AS AlarmWeekTue, SUBSTRING(week_enable, 3, 1) AS AlarmWeekWed, SUBSTRING(week_enable, 4, 1) AS AlarmWeekThu, SUBSTRING(week_enable, 5, 1) AS AlarmWeekFri, SUBSTRING(week_enable, 6, 1) AS AlarmWeekSat, SUBSTRING(week_enable, 7, 1) AS AlarmWeekSun, SUBSTRING(hour_enable, 1, 1) AS AlarmHour0, SUBSTRING(hour_enable, 2, 1) AS AlarmHour1, SUBSTRING(hour_enable, 3, 1) AS AlarmHour2, SUBSTRING(hour_enable, 4, 1) AS AlarmHour3, SUBSTRING(hour_enable, 5, 1) AS AlarmHour4, SUBSTRING(hour_enable, 6, 1) AS AlarmHour5, SUBSTRING(hour_enable, 7, 1) AS AlarmHour6, SUBSTRING(hour_enable, 8, 1) AS AlarmHour7, SUBSTRING(hour_enable, 9, 1) AS AlarmHour8, SUBSTRING(hour_enable, 10, 1) AS AlarmHour9, SUBSTRING(hour_enable, 11, 1) AS AlarmHour10, SUBSTRING(hour_enable, 12, 1) AS AlarmHour11, SUBSTRING(hour_enable, 13, 1) AS AlarmHour12, SUBSTRING(hour_enable, 14, 1) AS AlarmHour13, SUBSTRING(hour_enable, 15, 1) AS AlarmHour14, SUBSTRING(hour_enable, 16, 1) AS AlarmHour15, SUBSTRING(hour_enable, 17, 1) AS AlarmHour16, SUBSTRING(hour_enable, 18, 1) AS AlarmHour17, SUBSTRING(hour_enable, 19, 1) AS AlarmHour18, SUBSTRING(hour_enable, 20, 1) AS AlarmHour19, SUBSTRING(hour_enable, 21, 1) AS AlarmHour20, SUBSTRING(hour_enable, 22, 1) AS AlarmHour21, SUBSTRING(hour_enable, 23, 1) AS AlarmHour22, SUBSTRING(hour_enable, 24, 1) AS AlarmHour23 FROM ac_user au LEFT JOIN cn_group cg ON au.basic_group_id = cg.group_id WHERE au.user_level_code >= ? AND au.user_id = ?;",
        "set": "INSERT INTO ac_user SET ?, ? ON DUPLICATE KEY UPDATE ?;",
        "update": "UPDATE ac_user SET ? WHERE ?;",
        "loginCount": "UPDATE ac_user SET login = login + 1 WHERE user_id = ?;",
        "allUsers": "SELECT au.user_id AS id, au.name, au.mobile, CONCAT(au.name, '(', IFNULL(pc.code_name, 'UNKNOWN'), ')' ,' - ', au.mobile) AS name_mobile, au.user_level_code AS user_level, IFNULL(pc.code_name, 'UNKNOWN') AS grade FROM ac_user au LEFT JOIN pd_code pc ON au.user_level_code = pc.code_id WHERE au.b_use = 'Y' AND (au.user_level_code > ? OR au.user_id = ?) ORDER BY au.user_level_code, au.name;"
    },
    "lg_login_history": {
        "insert": "INSERT INTO lg_login_history SET ?;",
        "update": "UPDATE lg_login_history SET ? WHERE ?;"
    },
    "ac_grid_config": {
        "get": "SELECT pc.description AS id, gc.x, gc.y, gc.w, gc.h FROM ac_grid_config AS gc JOIN pd_code AS pc ON gc.code_id = pc.code_id WHERE pc.code_type = 'MAP' AND gc.user_id = ?;",
        "insert": "INSERT INTO ac_grid_config(user_id, code_id, x, y, w, h) VALUES(?, (SELECT code_id FROM pd_code WHERE code_type = 'MAP' AND description = ?), ?, ?, ?, ?) ON DUPLICATE KEY UPDATE ?;",
        "delete": "DELETE FROM ac_grid_config WHERE code_id like 'MAP%' AND user_id = ?;"
    },    
    "cn_group": {
        "info": "SELECT cg.group_id AS id, cg.p_group_id AS pid, CASE WHEN cg.p_group_id = 0 THEN 'ROOT' WHEN cg.group_id = (SELECT basic_group_id FROM ac_user WHERE user_id = ?) THEN 'ROOT' ELSE (SELECT group_name FROM cn_group temp_cg WHERE temp_cg.group_id = cg.p_group_id) END AS p_group_name, IFNULL((SELECT depth FROM cn_group temp_cg2 WHERE temp_cg2.group_id = cg.p_group_id), -1) AS p_group_depth, cg.group_name AS name, cg.description, cg.imageName, cg.depth FROM cn_group cg WHERE cg.group_id = ?;",
        "insert": "INSERT INTO cn_group (p_group_id, group_name, description, imageName, scene_index, type_code, depth) SELECT ?, CONCAT('new_group_', MAX(group_id) + 1) AS group_name, '', '0', 0, '', (SELECT depth + 1 FROM cn_group WHERE group_id = ?) AS depth FROM cn_group LIMIT 1;",
        "update": "UPDATE cn_group SET ? WHERE ?;",
        "findParentGroupName": "SELECT @id AS id, (SELECT group_name FROM cn_group WHERE group_id = id) AS name, (SELECT @id := p_group_id FROM cn_group WHERE group_id = id) AS p_id FROM (SELECT @id := ?) AS vars, cn_group WHERE @id <> 0 AND FIND_IN_SET(@id, ?);",
        "map": {
            "position": "UPDATE cn_group SET ? WHERE group_id = ? AND p_group_id = ?;",
            "nodes": "SELECT CONCAT('G_', cg.group_id) AS id, cg.group_name AS name, cg.current_level AS level, cg.xPosition AS pos_x, cg.yPosition AS pos_y, cg.zoom AS zoom, 'group' AS icon, cg.b_use AS isAvailable FROM cn_group cg WHERE cg.b_delete = 'N' AND cg.b_use = 'Y' AND cg.p_group_id = ?;"
        },
        "findGroupByImage": "SELECT cg.group_id, cg.p_group_id, cg.group_name, cg.imageName FROM cn_group cg WHERE cg.imageName = ?;"
    },
    "cn_equipment": {
        "info": "SELECT ce.equip_id AS id, ce.equip_name AS name, ce.group_id AS pid, (SELECT cg.group_name FROM cn_group cg WHERE cg.group_id = ce.group_id) AS p_name, ce.ip_address AS ip, ce.port_num AS port, ce.device_id AS device_id, CONCAT(ce.ip_address, ':', ce.port_num, ' [', IFNULL(ce.device_id, ''), ']') AS network_msg, ce.b_use, ce.b_data_save AS b_saved, ce.pd_equip_id, (SELECT pe.equip_code FROM pd_equipment pe WHERE pe.pd_equip_id = ce.pd_equip_id) AS equip_code, (SELECT pe.equip_model_name FROM pd_equipment pe WHERE pe.pd_equip_id = ce.pd_equip_id) AS model_name, IFNULL(DATE_FORMAT(ce.create_dateTime, '%Y/%m/%d %H:%i:%s'), '') AS create_time, IFNULL(DATE_FORMAT(ce.update_dateTime, '%Y/%m/%d %H:%i:%s'), '') AS update_time, ce.community, ce.description, ce.imageName, ce.poll_interval, ce.timeout, ce.retry, ce.user_define, ce.current_status, ce.current_level, (SELECT IF(ce.b_use = 'N', '사용안함', pc2.code_name) FROM pd_code pc2 WHERE pc2.code_type = 'A' AND pc2.code_int = ce.current_level) AS level_msg, (SELECT pc3.description FROM pd_code pc3 WHERE pc3.code_id IN (SELECT pe.equip_code FROM pd_equipment pe WHERE pe.pd_equip_id = ce.pd_equip_id)) AS icon FROM cn_equipment ce WHERE ce.b_delete = 'N' AND ce.equip_id = ?;",
        "popupInfo": "SELECT e.equip_id AS Id, e.pd_equip_id AS pdId, pd.equip_code AS equipCode, CONCAT('[', g.group_name, '] ', e.equip_name, ' : ', pd.equip_model_name) AS title, CONCAT(pd.equip_model_name, '_', pd.pd_equip_id) AS fileName, e.imageName, e.equip_name AS name, CONCAT('[', g.group_name, '] ', e.equip_name) AS name2, e.community AS community, e.user_define AS userDefine, e.ip_address AS ip, e.port_num AS port, e.device_id AS device_id, (SELECT code_name FROM pd_code WHERE code_id = pd.io_type_code) AS log_mod, (CASE WHEN e.b_use THEN '사용안함'WHEN e.current_level > 5 THEN '알수없음' ELSE (SELECT code_name FROM pd_code WHERE code_type = 'A' AND code_int = e.current_level) END) AS log_status, GROUP_CONCAT(DISTINCT cs.sensor_type) AS sensorType, (SELECT code_name FROM pd_code WHERE code_id = pd.equip_code) AS equipKind FROM cn_equipment AS e JOIN pd_equipment AS pd ON e.pd_equip_id = pd.pd_equip_id JOIN cn_group AS g ON e.group_id = g.group_id JOIN cn_sensor AS cs ON e.equip_id = cs.equip_id WHERE e.b_delete = 'N' AND e.equip_id = ?;",
        "insert": "INSERT INTO cn_equipment (equip_name, group_id, b_use, create_dateTime) SELECT CONCAT('new_equip_', IFNULL(MAX(equip_id), 0) + 1) AS equip_name, ?, 'N', ? FROM cn_equipment LIMIT 1;",
        "update": "UPDATE cn_equipment SET ? WHERE ?;",
        "map": {
            "position": "UPDATE cn_equipment SET ? WHERE equip_id = ? AND group_id = ?;",
            "nodes": "SELECT CONCAT('E_', ce.equip_id) AS id, ce.equip_name AS name, ce.current_level AS level, ce.xPosition AS pos_x, ce.yPosition AS pos_y, ce.zoom AS zoom, pc.description AS icon, pe.equip_code AS equip_code, ce.b_use AS isAvailable, CASE WHEN equip_code NOT IN ('E0002', 'E0014', 'E0027') THEN 'N' WHEN ce.b_use = 'N' THEN 'N' WHEN ce.current_level > 3 THEN 'N' ELSE (SELECT CASE WHEN cs.current_value = 0 AND cst.d_value_0_label IN ('가동', '운전') THEN 'Y' WHEN cs.current_value = 1 AND cst.d_value_1_label IN ('가동', '운전') THEN 'Y' WHEN cs.current_value = 2 AND cst.d_value_2_label IN ('가동', '운전') THEN 'Y' WHEN cs.current_value = 3 AND cst.d_value_3_label IN ('가동', '운전') THEN 'Y' WHEN cs.current_value = 4 AND cst.d_value_4_label IN ('가동', '운전') THEN 'Y' WHEN cs.current_value = 5 AND cst.d_value_5_label IN ('가동', '운전') THEN 'Y' WHEN cs.current_value = 6 AND cst.d_value_6_label IN ('가동', '운전') THEN 'Y' WHEN cs.current_value = 7 AND cst.d_value_7_label IN ('가동', '운전') THEN 'Y' ELSE 'N' END AS run_state FROM cn_sensor_threshold cst WHERE cst.sensor_id = cs.sensor_id) END AS run_state FROM cn_equipment ce LEFT JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id LEFT JOIN pd_code pc ON pe.equip_code = pc.code_id LEFT JOIN (SELECT equip_id, sensor_id, current_value FROM cn_sensor WHERE sensor_code = 'S0019' AND b_delete = 'N' AND b_use = 'Y') cs ON ce.equip_id = cs.equip_id WHERE ce.b_delete = 'N' AND ?;",
            "tooltip": "SELECT pe.equip_code AS equipCode, IFNULL((SELECT code_name FROM pd_code WHERE code_id = pe.equip_code), '') AS equipKind, (SELECT code_name FROM pd_code WHERE code_type = 'A' AND code_int = ce.current_level) AS levelName, IFNULL(DATE_FORMAT(ce.update_dateTime, '%Y/%m/%d %H:%i:%S'), '') AS update_dateTime, ce.current_level AS equipLevel, cs.sensor_id, cs.sensor_name, IF(SUBSTRING(cs.sensor_type, 1, 1) = 'A', cs.current_value, CASE cs.current_value WHEN 0 THEN cst.d_value_0_label WHEN 1 THEN cst.d_value_1_label WHEN 2 THEN cst.d_value_2_label WHEN 3 THEN cst.d_value_3_label WHEN 4 THEN cst.d_value_4_label WHEN 5 THEN cst.d_value_5_label WHEN 6 THEN cst.d_value_6_label WHEN 7 THEN cst.d_value_7_label END) AS value, cs.current_level AS sensorLevel, (SELECT IFNULL(disp_unit, '') FROM pd_code WHERE code_id = cs.sensor_code) AS disp_unit, IFNULL(cs.b_event, 'Y') AS isEvent, ce.b_use AS isAvailable FROM cn_equipment ce LEFT JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id LEFT JOIN cn_sensor cs ON ce.equip_id = cs.equip_id AND cs.b_delete = 'N' AND cs.b_use = 'Y' AND cs.b_display = 'Y' LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id WHERE ce.equip_id = ? ORDER BY cs.node_id;"
        },
        "statistics": {
            "byLevel": "SELECT pc.code_int AS idx, pc.code_name AS alarm_name, (SELECT COUNT(1) FROM cn_equipment ce WHERE ce.b_use = 'Y' AND ce.b_delete = 'N' AND ce.current_level = pc.code_int AND FIND_IN_SET(ce.group_id, ?)) AS value FROM pd_code pc WHERE pc.code_type = 'A' UNION ALL SELECT (SELECT MAX(code_int) + 1 FROM pd_code WHERE code_type = 'A') AS idx, '사용안함' AS alarm_name, (SELECT COUNT(1) FROM cn_equipment WHERE b_use = 'N' AND b_delete = 'N' AND FIND_IN_SET(group_id, ?)) AS value;",
            "byLevelPerCode": "SELECT pc.code_int AS idx, pc.code_name AS alarm_name, (SELECT COUNT(1) FROM cn_equipment ce JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id WHERE ce.b_use = 'Y' AND ce.b_delete = 'N' AND ce.current_level = pc.code_int AND pe.equip_code = ?) AS value FROM pd_code pc WHERE pc.code_type = 'A' UNION ALL SELECT (SELECT MAX(code_int) + 1 FROM pd_code WHERE code_type = 'A') AS idx, '사용안함' AS alarm_name, (SELECT COUNT(1) FROM cn_equipment ce JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id WHERE ce.b_use = 'N' AND ce.b_delete = 'N' AND pe.equip_code = ?) AS value;"
        },
        "get": "SELECT equip_id, equip_name FROM cn_equipment ce WHERE ce.b_delete = 'N' ORDER BY ce.equip_name;",
        "asset": {
            "get": "SELECT CASE pc.disp_unit WHEN '공조' THEN 0 WHEN '전기' THEN 1 WHEN '보안' THEN 2 WHEN '환경' THEN 3 WHEN '소방' THEN 4 ELSE 5 END AS equip_criteria_ordering, CASE pc.disp_unit WHEN '공조' THEN '공조' WHEN '보안' THEN '보안' WHEN '소방' THEN '소방' WHEN '전기' THEN '전기' WHEN '환경' THEN '환경' ELSE '기타' END AS equip_criteria, CONCAT(pc.code_name, ' | ', pc.code_id) AS equip_type, pe.equip_model_name AS equip_model, ce.equip_id, ce.equip_name AS equip_name, ce.ip_address AS ip, ce.port_num AS port, ce.device_id AS device_id, ce.description AS description, CASE WHEN ce.ip_address = '' THEN ' - ' ELSE (CASE WHEN ce.port_num <> '' THEN CONCAT(ce.ip_address, ':', ce.port_num) ELSE IFNULL(ce.ip_address, ' - ') END) END AS ip_port, ce.b_use AS bUse FROM cn_equipment ce JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id JOIN pd_code pc ON pe.equip_code = pc.code_id WHERE pe.io_type_code <> 'I0003' AND ce.b_delete = 'N' AND FIND_IN_SET(ce.equip_id, ?)"
        },
        "kepco": {
            "doors": "SELECT cs.sensor_id, TRIM(TRAILING ')' FROM TRIM('select*fromv_door_status(' FROM REPLACE(ce.user_define, ' ', ''))) AS ud FROM cn_equipment ce JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id AND pe.equip_code = 'E0008' JOIN cn_sensor cs ON cs.equip_id = ce.equip_id AND cs.sensor_code = 'S0031' WHERE ce.b_delete = 'N' AND ce.b_use = 'Y' AND cs.b_delete = 'N' AND cs.b_use = 'Y';",
            "asset": "SELECT CASE pc.disp_unit WHEN '공조' THEN 0 WHEN '전기' THEN 1 WHEN '보안' THEN 2 WHEN '환경' THEN 3 WHEN '소방' THEN 4 ELSE 5 END AS equip_criteria_ordering, CASE pc.disp_unit WHEN '공조' THEN '공조' WHEN '보안' THEN '보안' WHEN '소방' THEN '소방' WHEN '전기' THEN '전기' WHEN '환경' THEN '환경' ELSE '기타' END AS equip_criteria, pc.code_name AS equip_type, ce.equip_id, ce.equip_name AS equip_name, ceai.model_name, ceai.serial_info, ce.ip_address AS ip, DATE_FORMAT(ceai.install_date, '%Y/%m/%d') AS install_date, ceai.mgr_name, ceai.op_name, ceai.ma_phone, ce.description AS description, ce.b_use AS bUse FROM cn_equipment ce JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id JOIN pd_code pc ON pe.equip_code = pc.code_id LEFT JOIN cn_equip_add_info ceai ON ce.equip_id = ceai.equip_id WHERE pe.io_type_code <> 'I0003' AND ce.b_delete = 'N' AND FIND_IN_SET(ce.equip_id, ?)"
        },
        "external": {
            "list": "SELECT * FROM view_equip_status;",
            "info": "SELECT * FROM view_equip_status WHERE ?;"
        }
    },
    "cn_equip_add_info": {
        "info": "SELECT cea.equip_id AS id, cea.mgr_name, cea.op_name, cea.model_name, cea.serial_info, cea.install_date, cea.ma_phone, cea.location_info, cea.image_file FROM cn_equip_add_info cea WHERE cea.equip_id = ?;",
        "set": "INSERT INTO cn_equip_add_info SET ? ON DUPLICATE KEY UPDATE ?;",
        "update": "UPDATE cn_equip_add_info SET ? WHERE ?;",
        "findImages": "SELECT cea.equip_id, cea.image_file FROM cn_equip_add_info cea WHERE cea.image_file = ?;"
    },
    "cn_equip_work_rec": {
        "insert": "INSERT INTO cn_equip_work_rec SET ?;",
        "update": "UPDATE cn_equip_work_rec SET ? WHERE ?;",
        "delete": {
            "byIndex": "DELETE FROM cn_equip_work_rec WHERE ?;"
        },
        "list": {
            "byEquipId": "SELECT cew.index, cew.equip_id, DATE_FORMAT(cew.work_dt, '%Y/%m/%d %H:%i') AS work_dt, cew.work_code, pc.code_name AS work_type_name, cew.worker_name, cew.text FROM cn_equip_work_rec cew JOIN pd_code pc ON cew.work_code = pc.code_id WHERE cew.equip_id = ? ORDER BY cew.work_dt DESC;",
            "report": "SELECT cewr.index, cewr.equip_id, ce.equip_name, DATE_FORMAT(cewr.work_dt, '%Y/%m/%d %H:%i') AS work_dt, cewr.work_code, pc.code_name AS work_type_name, cewr.worker_name, cewr.`text` FROM cn_equip_work_rec cewr JOIN pd_code pc ON pc.code_type = 'WK' AND pc.code_id = cewr.work_code JOIN cn_equipment ce ON ce.equip_id = cewr.equip_id WHERE cewr.equip_id IN ($$1) AND cewr.work_dt BETWEEN '$$2' AND '$$3' ORDER BY work_dt DESC LIMIT 100000;"
        }
    },
    "cn_sensor": {
        "info": "SELECT cs.sensor_id, cs.sensor_name, ce.equip_id, ce.equip_name, cs.sensor_type FROM cn_sensor cs JOIN cn_equipment ce ON cs.equip_id = ce.equip_id WHERE cs.sensor_id = ?;",
        "infoWithValue": "SELECT cs.sensor_id AS sensor_id, ce.equip_id, cs.sensor_name, pc.code_name AS sensor_type_name, cs.sensor_type, cs.current_level AS lvl, cs.current_value AS val, pc.disp_unit AS unit, CASE WHEN SUBSTRING(cs.sensor_type, 1, 1) = 'A' THEN NULL ELSE CASE cs.current_value WHEN 0 THEN st.d_value_0_label WHEN 1 THEN st.d_value_1_label WHEN 2 THEN st.d_value_2_label WHEN 3 THEN st.d_value_3_label WHEN 4 THEN st.d_value_4_label WHEN 5 THEN st.d_value_5_label WHEN 6 THEN st.d_value_6_label ELSE st.d_value_7_label END END AS label FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id JOIN pd_code pc ON cs.sensor_code = pc.code_id LEFT JOIN cn_sensor_threshold AS st ON st.sensor_id = cs.sensor_id WHERE cs.sensor_id = ?;",
        "infoWithIds": "SELECT ce.equip_name, cs.sensor_name, cs.node_id, cs.sensor_type, cs.sensor_code, CASE WHEN pc.disp_unit = '' THEN pc.code_name ELSE CONCAT(pc.code_name, ' (', pc.disp_unit, ')') END AS sensor_code_name, cs.div_value, cs.oid, cs.mc_id, cs.b_display, cs.b_event, cs.event_mode, cs.b_use, cs.user_define FROM cn_sensor cs JOIN cn_equipment ce ON cs.equip_id = ce.equip_id JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE cs.sensor_id IN ($$1);",
        "insert": "INSERT INTO cn_sensor(equip_id, pd_sensor_id, sensor_code, sensor_type, sensor_name, oid, node_id, div_value, mc_id, b_event) SELECT ? AS equip_id, ps.pd_sensor_id, ps.sensor_code, ps.sensor_type, ps.sensor_name, ps.oid, ps.node_id, ps.div_value, ps.mc_id, CASE ps.pd_threshold_id WHEN 0 THEN 'N' ELSE 'Y' END FROM pd_sensor ps WHERE ? ORDER BY ps.pd_sensor_id;",
        "update": "UPDATE cn_sensor SET ? WHERE ?;",
        "list": {
            "perEquipment": "SELECT cs.node_id AS id, cs.sensor_id AS sensor_id, cs.sensor_name AS name, cs.sensor_type AS sensor_type, IF(SUBSTRING(cs.sensor_type, 1, 1) = 'A', cs.current_value, CASE cs.current_value WHEN 0 THEN cst.d_value_0_label WHEN 1 THEN cst.d_value_1_label WHEN 2 THEN cst.d_value_2_label WHEN 3 THEN cst.d_value_3_label WHEN 4 THEN cst.d_value_4_label WHEN 5 THEN cst.d_value_5_label WHEN 6 THEN cst.d_value_6_label ELSE cst.d_value_7_label END) AS value, IFNULL(pc.disp_unit, '') AS unit, cs.b_event AS event, CASE WHEN ce.b_use = 'N' THEN 4 WHEN ce.current_level = 4 THEN 4 WHEN ce.current_level = 5 THEN 4 ELSE cs.current_level END AS level, cs.comm_status AS sensor_comm_status, ce.b_use AS equipAvailable, ce.current_level AS equipLevel FROM cn_sensor cs LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id JOIN pd_code pc ON cs.sensor_code = pc.code_id LEFT JOIN cn_equipment ce ON cs.equip_id = ce.equip_id WHERE cs.b_delete = 'N' AND cs.b_use = 'Y' AND cs.equip_id = ? ORDER BY cs.node_id;",
            "basicInfo": "SELECT cs.sensor_id AS id, ce.group_id, ce.equip_id, ce.equip_name, cs.sensor_name AS name, cs.node_id AS node, cs.sensor_type AS sensorType, cs.sensor_code AS unit, cs.div_value AS divValue, cs.user_define AS userDefine, cs.oid AS oid, cs.mc_id AS mcid, IFNULL(cs.b_use, 'Y') AS bUse, IFNULL(cs.b_event, 'Y') AS bEvent, IFNULL(cs.b_display, 'Y') AS bDisplay, cs.b_data_save AS bData FROM cn_sensor cs JOIN cn_equipment ce ON cs.equip_id = ce.equip_id WHERE cs.b_delete = 'N' AND FIND_IN_SET(ce.equip_id, ?) ORDER BY ce.equip_name, cs.sensor_id;",
            "thresholdInfo": "SELECT cs.sensor_id AS sensor_id, ce.group_id, ce.equip_id, ce.equip_name, cs.sensor_name AS sensor_name, cs.current_value AS current_value, SUBSTRING(cs.event_mode, 1, 1) AS b_popup, SUBSTRING(cs.event_mode, 2, 1) AS b_sms, SUBSTRING(cs.event_mode, 3, 1) AS b_email, st.a_critical_min, st.a_major_min, st.a_warning_min, st.a_warning_max, st.a_major_max, st.a_critical_max, st.d_value_0_level, st.d_value_0_label, st.d_value_1_level, st.d_value_1_label, st.d_value_2_level, st.d_value_2_label, st.d_value_3_level, st.d_value_3_label, st.d_value_4_level, st.d_value_4_label, st.d_value_5_level, st.d_value_5_label, st.d_value_6_level, st.d_value_6_label, st.d_value_7_level, st.d_value_7_label, st.holding_time FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id LEFT JOIN cn_sensor_threshold AS st ON st.sensor_id = cs.sensor_id WHERE cs.b_delete = 'N' AND SUBSTRING(cs.sensor_type, 1, 1) = ? AND cs.b_event = 'Y' AND FIND_IN_SET(ce.equip_id, ?) ORDER BY ce.equip_name, cs.sensor_id;"
        },
        "pms": {
            "semsInfo": "SELECT cs.sensor_name, cs.node_id, cs.current_value, cs.current_level FROM cn_sensor cs WHERE cs.equip_id = ? AND cs.node_id IN (1, 2, 3, 4, 5, 6, 7, 8) AND cs.b_delete = 'N';"
        },
        "door": {
            "run_state": "SELECT CASE WHEN cs.current_value = 0 AND UPPER(cst.d_value_0_label) IN ('열림', 'OPEN') THEN 'Y' WHEN cs.current_value = 1 AND UPPER(cst.d_value_1_label) IN ('열림', 'OPEN') THEN 'Y' WHEN cs.current_value = 2 AND UPPER(cst.d_value_2_label) IN ('열림', 'OPEN') THEN 'Y' WHEN cs.current_value = 3 AND UPPER(cst.d_value_3_label) IN ('열림', 'OPEN') THEN 'Y' WHEN cs.current_value = 4 AND UPPER(cst.d_value_4_label) IN ('열림', 'OPEN') THEN 'Y' WHEN cs.current_value = 5 AND UPPER(cst.d_value_5_label) IN ('열림', 'OPEN') THEN 'Y' WHEN cs.current_value = 6 AND UPPER(cst.d_value_6_label) IN ('열림', 'OPEN') THEN 'Y' WHEN cs.current_value = 7 AND UPPER(cst.d_value_7_label) IN ('열림', 'OPEN') THEN 'Y' ELSE 'N' END AS run_state FROM cn_sensor cs JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id WHERE cs.b_delete = 'N' AND cs.b_use = 'Y' AND cs.sensor_code = 'S0031' AND cs.equip_id = ?;"
        },
        "external": {
            "list": "SELECT sensor_id, sensor_name, sensor_type, sensor_value, unit, `LEVEL`, level_text, updatetime FROM view_sensor_status WHERE ?;"
        }
    },
    "cn_sensor_threshold": {
        "insert": "INSERT INTO cn_sensor_threshold(equip_id, sensor_id, rearm_value, holding_count, holding_time, a_warning_min, a_warning_max, a_major_min, a_major_max, a_critical_min, a_critical_max, d_value_0_level, d_value_0_label, d_value_1_level, d_value_1_label, d_value_2_level, d_value_2_label, d_value_3_level, d_value_3_label, d_value_4_level, d_value_4_label, d_value_5_level, d_value_5_label, d_value_6_level, d_value_6_label, d_value_7_level, d_value_7_label) SELECT cs.equip_id, cs.sensor_id, pst.rearm_value, pst.holding_count, pst.holding_time, pst.a_warning_min, pst.a_warning_max, pst.a_major_min, pst.a_major_max, pst.a_critical_min, pst.a_critical_max, pst.d_value_0_level, pst.d_value_0_label, pst.d_value_1_level, pst.d_value_1_label, pst.d_value_2_level, pst.d_value_2_label, pst.d_value_3_level, pst.d_value_3_label, pst.d_value_4_level, pst.d_value_4_label, pst.d_value_5_level, pst.d_value_5_label, pst.d_value_6_level, pst.d_value_6_label, pst.d_value_7_level, pst.d_value_7_label FROM cn_sensor cs JOIN pd_sensor ps ON cs.pd_sensor_id = ps.pd_sensor_id LEFT JOIN pd_sensor_threshold pst ON ps.pd_threshold_id = pst.pd_threshold_id WHERE cs.b_delete = 'N' AND cs.equip_id = ?;",
        "update": "UPDATE cn_sensor_threshold SET ? WHERE ?;",
        "get": "SELECT * FROM cn_sensor_threshold WHERE ?;",
        "infoWithIds": "SELECT *, (SELECT pc.code_name FROM pd_code pc WHERE pc.code_type = 'A' AND pc.code_int = cst.d_value_0_level) AS level_0, (SELECT pc.code_name FROM pd_code pc WHERE pc.code_type = 'A' AND pc.code_int = cst.d_value_1_level) AS level_1, (SELECT pc.code_name FROM pd_code pc WHERE pc.code_type = 'A' AND pc.code_int = cst.d_value_2_level) AS level_2, (SELECT pc.code_name FROM pd_code pc WHERE pc.code_type = 'A' AND pc.code_int = cst.d_value_3_level) AS level_3, (SELECT pc.code_name FROM pd_code pc WHERE pc.code_type = 'A' AND pc.code_int = cst.d_value_4_level) AS level_4, (SELECT pc.code_name FROM pd_code pc WHERE pc.code_type = 'A' AND pc.code_int = cst.d_value_5_level) AS level_5, (SELECT pc.code_name FROM pd_code pc WHERE pc.code_type = 'A' AND pc.code_int = cst.d_value_6_level) AS level_6, (SELECT pc.code_name FROM pd_code pc WHERE pc.code_type = 'A' AND pc.code_int = cst.d_value_7_level) AS level_7 FROM cn_sensor_threshold cst WHERE cst.sensor_id IN ($$1);"
    },
    "cn_map_dummy": {
        "delete": "DELETE FROM cn_map_dummy WHERE ?;",
        "map": {
            "position": "UPDATE cn_map_dummy SET ? WHERE dummy_id = ? AND group_id = ?;",
            "nodes": "SELECT CONCAT('D_', cmd.dummy_id) AS id, cmd.xPosition AS pos_x, cmd.yPosition AS pos_y, IFNULL(cml.equip_id, -1) AS equip_id, IFNULL(cml.point_index, '') AS point_idx, IFNULL(cml.distance, '') AS distance FROM cn_map_dummy cmd LEFT JOIN cn_map_leak cml ON cmd.dummy_id = cml.dummy_id LEFT JOIN cn_equipment ce ON cml.equip_id = ce.equip_id AND ce.b_delete = 'N' AND ce.b_use = 'Y' WHERE cmd.group_id = ?;"
        }
    },
    "cn_map_link": {
        "delete": "DELETE FROM cn_map_link WHERE ? OR (? OR ?);",
        "map": {
            "nodes": "SELECT l.link_id, l.src, l.dst FROM cn_map_link l WHERE l.group_id = ?;"
        }
    },
    "cn_map_leak": {
        "delete": "DELETE FROM cn_map_leak WHERE dummy_id IN (SELECT dummy_id FROM cn_map_dummy WHERE ?);"
    },
    "cn_map_dashboard": {
        "delete": "DELETE FROM cn_map_dashboard WHERE ?;"
    },
    "cn_modbus_cmd": {
        "insert": "INSERT INTO cn_modbus_cmd (equip_id, mc_id, function_code, start_addr, point_cnt, data_type) SELECT ?, pmc.mc_id, pmc.function_code, pmc.start_addr, pmc.point_cnt, pmc.data_type FROM pd_modbus_cmd pmc WHERE ?;",
        "delete": "DELETE FROM cn_modbus_cmd WHERE ?;",
        "info": {
            "insert": "INSERT INTO cn_modbus_cmd SET ?;",
            "update": "UPDATE cn_modbus_cmd SET ? WHERE equip_id = ? AND mc_id = ?;",
            "delete": "DELETE FROM cn_modbus_cmd WHERE equip_id = ? AND mc_id = ?;",
            "bySensorId": "SELECT mc.equip_id, mc.mc_id AS mcid, mc.mc_id AS mcidText, mc.function_code AS funcCode, mc.start_addr AS startAddr, mc.point_cnt AS pointCnt, mc.data_type AS `type`, CONCAT(pc.description, ' (', mc.data_type, ')') AS description FROM cn_modbus_cmd mc JOIN pd_code pc ON mc.data_type = pc.code_name WHERE pc.code_type = 'DTY' AND mc.equip_id IN (SELECT cs.equip_id FROM cn_sensor cs WHERE cs.sensor_id = ?) ORDER BY mc.mc_id;"
        }
    },
    "cn_diagram": {
        "insert": "INSERT INTO cn_diagram SET ?;",
        "delete": "DELETE FROM cn_diagram WHERE ?;",
        "update": "UPDATE cn_diagram SET ? WHERE ?;",
        "get": "SELECT * FROM cn_diagram_view cd WHERE ?;",
        "icon": {
            "group": "SELECT 'group' AS icon;",
            "equipment": "SELECT pc.description AS icon FROM pd_code pc JOIN pd_equipment pe ON pc.code_id = pe.equip_code JOIN cn_equipment ce ON ce.pd_equip_id = pe.pd_equip_id WHERE ce.equip_id = ?;",
            "sensor": "SELECT pc.description AS icon FROM pd_code pc JOIN pd_equipment pe ON pc.code_id = pe.equip_code JOIN cn_equipment ce ON ce.pd_equip_id = pe.pd_equip_id JOIN cn_sensor cs ON ce.equip_id = cs.equip_id WHERE cs.sensor_id = ?;"
        },
        "hvacctrl": {
            "group": "",
            "equipment": "SELECT CASE WHEN pc.description != 'constant_temperature' THEN 'stop' WHEN ce.current_level > 3 THEN 'stop' ELSE (SELECT CASE WHEN cs.current_value = 0 AND cst.d_value_0_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 1 AND cst.d_value_1_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 2 AND cst.d_value_2_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 3 AND cst.d_value_3_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 4 AND cst.d_value_4_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 5 AND cst.d_value_5_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 6 AND cst.d_value_6_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 7 AND cst.d_value_7_label IN ('가동', '운전') THEN 'run' ELSE 'stop' END AS isRun FROM cn_sensor_threshold cst WHERE cst.sensor_id = cs.sensor_id) END AS isRun, cs.sensor_id AS ctrlId, cs1.current_value AS temp, cs1.current_level AS temp_level, cs2.current_value AS humi, cs2.current_level AS humi_level FROM cn_equipment ce JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id JOIN pd_code pc ON pe.equip_code = pc.code_id JOIN (SELECT equip_id, sensor_id, sensor_name, sensor_code, current_value FROM cn_sensor WHERE sensor_code = 'S0019' AND b_delete = 'N' AND b_use = 'Y') cs ON ce.equip_id = cs.equip_id JOIN (SELECT equip_id, sensor_id, sensor_name, sensor_code, current_value, current_level FROM cn_sensor WHERE sensor_code = 'S0001' AND node_id = 1 AND b_delete = 'N' AND b_use = 'Y') cs1 ON ce.equip_id = cs1.equip_id JOIN (SELECT equip_id, sensor_id, sensor_name, sensor_code, current_value, current_level FROM cn_sensor WHERE sensor_code = 'S0002' AND node_id = 2 AND b_delete = 'N' AND b_use = 'Y') cs2 ON ce.equip_id = cs2.equip_id WHERE ce.equip_id = ?;",
            "sensor": ""
        },
        "wrfispms": {
            "group": "",
            "equipment": "",
            "sensor": ""
        },
        "wrfisbms1": {
            "group": "",
            "equipment": "SELECT cs.current_value AS system_current FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id WHERE ce.equip_id = ? AND cs.sensor_code = 'S0006' LIMIT 1;",
            "sensor": ""
        },
        "wrfisbmsSys": {
            "group": "",
            "equipment": "SELECT cs1.current_level AS status_lvl, CASE cs1.current_value WHEN 0 THEN cst1.d_value_0_label WHEN 1 THEN cst1.d_value_1_label WHEN 2 THEN cst1.d_value_2_label WHEN 3 THEN cst1.d_value_3_label WHEN 4 THEN cst1.d_value_4_label WHEN 5 THEN cst1.d_value_5_label WHEN 6 THEN cst1.d_value_6_label WHEN 7 THEN cst1.d_value_7_label END AS status_val, cs2.current_level AS battery_lvl, CASE cs2.current_value WHEN 0 THEN cst2.d_value_0_label WHEN 1 THEN cst2.d_value_1_label WHEN 2 THEN cst2.d_value_2_label WHEN 3 THEN cst2.d_value_3_label WHEN 4 THEN cst2.d_value_4_label WHEN 5 THEN cst2.d_value_5_label WHEN 6 THEN cst2.d_value_6_label WHEN 7 THEN cst2.d_value_7_label END AS battery_val, cs3.current_level AS time_lvl, cs3.current_value AS time_val, (SELECT disp_unit FROM pd_code WHERE code_id = cs3.sensor_code) AS time_unit, cs4.current_level AS voltage_lvl, cs4.current_value AS voltage_val, (SELECT disp_unit FROM pd_code WHERE code_id = cs4.sensor_code) AS voltage_unit, cs5.current_level AS current_lvl, cs5.current_value AS current_val, (SELECT disp_unit FROM pd_code WHERE code_id = cs5.sensor_code) AS current_unit, cs6.current_level AS capacity_lvl, cs6.current_value AS capacity_val, (SELECT disp_unit FROM pd_code WHERE code_id = cs6.sensor_code) AS capacity_unit FROM cn_equipment ce JOIN cn_sensor cs1 ON ce.equip_id = cs1.equip_id AND cs1.oid = 'in_status' JOIN cn_sensor cs2 ON ce.equip_id = cs2.equip_id AND cs2.oid = 'in_battery_use' JOIN cn_sensor cs3 ON ce.equip_id = cs3.equip_id AND cs3.oid = 'in_battery_time' JOIN cn_sensor cs4 ON ce.equip_id = cs4.equip_id AND cs4.oid = 'in_voltage' JOIN cn_sensor cs5 ON ce.equip_id = cs5.equip_id AND cs5.oid = 'in_current' JOIN cn_sensor cs6 ON ce.equip_id = cs6.equip_id AND cs6.oid = 'in_capacity' JOIN cn_sensor_threshold cst1 ON cs1.sensor_id = cst1.sensor_id JOIN cn_sensor_threshold cst2 ON cs2.sensor_id = cst2.sensor_id WHERE ce.equip_id = ?;",
            "sensor": ""
        },
        "wrfisbmsRack": {
            "group": "",
            "equipment": "SELECT cs1.current_level AS status_lvl, CASE cs1.current_value WHEN 0 THEN cst1.d_value_0_label WHEN 1 THEN cst1.d_value_1_label WHEN 2 THEN cst1.d_value_2_label WHEN 3 THEN cst1.d_value_3_label WHEN 4 THEN cst1.d_value_4_label WHEN 5 THEN cst1.d_value_5_label WHEN 6 THEN cst1.d_value_6_label WHEN 7 THEN cst1.d_value_7_label END AS status_val, cs2.current_level AS voltage_lvl, cs2.current_value AS voltage_val, (SELECT disp_unit FROM pd_code WHERE code_id = cs2.sensor_code) AS voltage_unit, cs3.current_level AS current_lvl, cs3.current_value AS current_val, (SELECT disp_unit FROM pd_code WHERE code_id = cs3.sensor_code) AS current_unit, cs4.current_level AS soc_lvl, cs4.current_value AS soc_val, cs5.current_level AS soh_lvl, cs5.current_value AS soh_val FROM cn_equipment ce JOIN cn_sensor cs1 ON ce.equip_id = cs1.equip_id AND cs1.oid = 'in_status' JOIN cn_sensor cs2 ON ce.equip_id = cs2.equip_id AND cs2.oid = 'in_voltage' JOIN cn_sensor cs3 ON ce.equip_id = cs3.equip_id AND cs3.oid = 'in_current' JOIN cn_sensor cs4 ON ce.equip_id = cs4.equip_id AND cs4.oid = 'in_soc' JOIN cn_sensor cs5 ON ce.equip_id = cs5.equip_id AND cs5.oid = 'in_soh' JOIN cn_sensor_threshold cst1 ON cs1.sensor_id = cst1.sensor_id JOIN cn_sensor_threshold cst2 ON cs2.sensor_id = cst2.sensor_id WHERE ce.equip_id = ?;",
            "sensor": ""
        },
        "wrfistemp": {
            "group": "",
            "equipment": "",
            "sensor": "SELECT ce.equip_name FROM cn_sensor cs JOIN cn_equipment ce ON cs.equip_id = ce.equip_id WHERE cs.sensor_id = ?;"
        },
        "tempdi": {
            "group": "",
            "equipment": "",
            "sensor": "SELECT ce.equip_name, ce.current_level AS equip_level FROM cn_sensor cs JOIN cn_equipment ce ON cs.equip_id = ce.equip_id WHERE cs.sensor_id = ?;"
        },
        "light": {
            "group": "",
            "equipment": "",
            "sensor": "SELECT ce.equip_id, ce.equip_name, ce.ip_address AS ip, ce.port_num AS port, cs.sensor_name, cs.current_value AS val, cs.user_define AS ctrl_info, ce.b_use AS available_equip FROM cn_sensor cs JOIN cn_equipment ce ON cs.equip_id = ce.equip_id WHERE cs.sensor_id = ?;"
        },
        "door": {
            "group": "",
            "equipment": "",
            "sensor": "SELECT ce.equip_name, ce.b_use AS available_equip, CASE WHEN cs.b_use <> 'Y' THEN 0 WHEN cs.current_value = 0 AND UPPER(cst.d_value_0_label) IN ('열림', 'OPEN') THEN 1 WHEN cs.current_value = 1 AND UPPER(cst.d_value_1_label) IN ('열림', 'OPEN') THEN 1 WHEN cs.current_value = 2 AND UPPER(cst.d_value_2_label) IN ('열림', 'OPEN') THEN 1 WHEN cs.current_value = 3 AND UPPER(cst.d_value_3_label) IN ('열림', 'OPEN') THEN 1 WHEN cs.current_value = 4 AND UPPER(cst.d_value_4_label) IN ('열림', 'OPEN') THEN 1 WHEN cs.current_value = 5 AND UPPER(cst.d_value_5_label) IN ('열림', 'OPEN') THEN 1 WHEN cs.current_value = 6 AND UPPER(cst.d_value_6_label) IN ('열림', 'OPEN') THEN 1 WHEN cs.current_value = 7 AND UPPER(cst.d_value_7_label) IN ('열림', 'OPEN') THEN 1 ELSE 0 END AS isOpen FROM cn_sensor cs JOIN cn_equipment ce ON cs.equip_id = ce.equip_id LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id WHERE cs.sensor_id = ?;"
        },
        "th": {
            "group": "",
            "equipment": "SELECT MAX(CASE WHEN (cs.b_delete <> 'Y' AND cs.b_use <> 'N') = 0 THEN '-' WHEN cs.sensor_code = 'S0001' THEN cs.current_value END) AS temp, MAX(CASE WHEN (cs.b_delete <> 'Y' AND cs.b_use <> 'N') = 0 THEN '-' WHEN cs.sensor_code = 'S0002' THEN cs.current_value END) AS humi FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id WHERE ce.equip_id = ?;",
            "sensor": ""
        },
        "thtop": {
            "group": "",
            "equipment": "SELECT MAX(CASE WHEN (cs.b_delete <> 'Y' AND cs.b_use <> 'N') = 0 THEN '-' WHEN cs.sensor_code = 'S0001' THEN cs.current_value END) AS temp, MAX(CASE WHEN (cs.b_delete <> 'Y' AND cs.b_use <> 'N') = 0 THEN '-' WHEN cs.sensor_code = 'S0002' THEN cs.current_value END) AS humi FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id WHERE ce.equip_id = ?;",
            "sensor": ""
        },
        "thbottom": {
            "group": "",
            "equipment": "SELECT MAX(CASE WHEN (cs.b_delete <> 'Y' AND cs.b_use <> 'N') = 0 THEN '-' WHEN cs.sensor_code = 'S0001' THEN cs.current_value END) AS temp, MAX(CASE WHEN (cs.b_delete <> 'Y' AND cs.b_use <> 'N') = 0 THEN '-' WHEN cs.sensor_code = 'S0002' THEN cs.current_value END) AS humi FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id WHERE ce.equip_id = ?;",
            "sensor": ""
        },
        "thonlyt": {
            "group": "",
            "equipment": "SELECT MAX(CASE WHEN (cs.b_delete <> 'Y' AND cs.b_use <> 'N') = 0 THEN '-' WHEN cs.sensor_code = 'S0001' THEN cs.current_value END) AS temp, MAX(CASE WHEN (cs.b_delete <> 'Y' AND cs.b_use <> 'N') = 0 THEN '-' WHEN cs.sensor_code = 'S0002' THEN cs.current_value END) AS humi FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id WHERE ce.equip_id = ?;",
            "sensor": ""
        },
        "powert": {
            "group": "",
            "equipment": "SELECT MAX(CASE cs.pd_sensor_id WHEN 110001 THEN cs.current_value ELSE null END) AS v, MAX(CASE cs.pd_sensor_id WHEN 110007 THEN cs.current_value ELSE null END) AS a, MAX(CASE cs.pd_sensor_id WHEN 110011 THEN cs.current_value ELSE null END) AS kw FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id WHERE ce.equip_id = ?;",
            "sensor": ""
        },
        "d-sv": {
            "group": "",
            "equipment": "SELECT d.equip_name AS equip_name, d.equip_level AS equip_level, DATE_FORMAT(d.update_dt, '%Y.%m.%d %H:%i:%s') AS update_dt, MAX(CASE WHEN node_id = 1 THEN value ELSE NULL END) AS r, MAX(CASE WHEN node_id = 1 THEN unit ELSE NULL END) AS r_unit, MAX(CASE WHEN node_id = 2 THEN value ELSE NULL END) AS s, MAX(CASE WHEN node_id = 2 THEN unit ELSE NULL END) AS s_unit, MAX(CASE WHEN node_id = 3 THEN value ELSE NULL END) AS t, MAX(CASE WHEN node_id = 3 THEN unit ELSE NULL END) AS t_unit, MAX(CASE WHEN node_id = 7 THEN value ELSE NULL END) AS rs, MAX(CASE WHEN node_id = 7 THEN unit ELSE NULL END) AS rs_unit, MAX(CASE WHEN node_id = 8 THEN value ELSE NULL END) AS st, MAX(CASE WHEN node_id = 8 THEN unit ELSE NULL END) AS st_unit, MAX(CASE WHEN node_id = 9 THEN value ELSE NULL END) AS tr, MAX(CASE WHEN node_id = 9 THEN unit ELSE NULL END) AS tr_unit, MAX(CASE WHEN node_id = 10 THEN value ELSE NULL END) AS hz, MAX(CASE WHEN node_id = 10 THEN unit ELSE NULL END) AS hz_unit, MAX(CASE WHEN node_id = 11 THEN value ELSE NULL END) AS pf, MAX(CASE WHEN node_id = 11 THEN unit ELSE NULL END) AS pf_unit, MAX(CASE WHEN node_id = 12 THEN value ELSE NULL END) AS w, MAX(CASE WHEN node_id = 12 THEN unit ELSE NULL END) AS w_unit, MAX(CASE WHEN node_id = 14 THEN value ELSE NULL END) AS wh, MAX(CASE WHEN node_id = 14 THEN unit ELSE NULL END) AS wh_unit, MAX(CASE WHEN node_id = 16 THEN value ELSE NULL END) AS mode, MAX(CASE WHEN node_id = 17 THEN value ELSE NULL END) AS vcb, MAX(CASE WHEN node_id = 18 THEN value ELSE NULL END) AS ocr, MAX(CASE WHEN node_id = 18 THEN `level` ELSE NULL END) AS ocr_level FROM (SELECT ce.equip_name, ce.current_level AS equip_level, ce.update_dateTime AS update_dt, cs.node_id, cs.current_level AS `level`, IF(SUBSTRING(cs.sensor_type, 1, 1) = 'A', cs.current_value, CASE cs.current_value WHEN 0 THEN cst.d_value_0_label WHEN 1 THEN cst.d_value_1_label WHEN 2 THEN cst.d_value_2_label WHEN 3 THEN cst.d_value_3_label WHEN 4 THEN cst.d_value_4_label WHEN 5 THEN cst.d_value_5_label WHEN 6 THEN cst.d_value_6_label ELSE cst.d_value_7_label END) AS value, IFNULL(pc.disp_unit, '') AS unit FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id JOIN pd_code pc ON pc.code_id = cs.sensor_code WHERE ce.equip_id = ?) d;",
            "sensor": ""
        },
        "d-sv-t": {
            "group": "",
            "equipment": "SELECT d.equip_name AS equip_name, d.equip_level AS equip_level, DATE_FORMAT(d.update_dt, '%Y.%m.%d %H:%i:%s') AS update_dt, MAX(CASE WHEN node_id = 1 THEN value ELSE NULL END) AS r, MAX(CASE WHEN node_id = 1 THEN unit ELSE NULL END) AS r_unit, MAX(CASE WHEN node_id = 2 THEN value ELSE NULL END) AS s, MAX(CASE WHEN node_id = 2 THEN unit ELSE NULL END) AS s_unit, MAX(CASE WHEN node_id = 3 THEN value ELSE NULL END) AS t, MAX(CASE WHEN node_id = 3 THEN unit ELSE NULL END) AS t_unit, MAX(CASE WHEN node_id = 7 THEN value ELSE NULL END) AS rs, MAX(CASE WHEN node_id = 7 THEN unit ELSE NULL END) AS rs_unit, MAX(CASE WHEN node_id = 8 THEN value ELSE NULL END) AS st, MAX(CASE WHEN node_id = 8 THEN unit ELSE NULL END) AS st_unit, MAX(CASE WHEN node_id = 9 THEN value ELSE NULL END) AS tr, MAX(CASE WHEN node_id = 9 THEN unit ELSE NULL END) AS tr_unit, MAX(CASE WHEN node_id = 10 THEN value ELSE NULL END) AS hz, MAX(CASE WHEN node_id = 10 THEN unit ELSE NULL END) AS hz_unit, MAX(CASE WHEN node_id = 11 THEN value ELSE NULL END) AS pf, MAX(CASE WHEN node_id = 11 THEN unit ELSE NULL END) AS pf_unit, MAX(CASE WHEN node_id = 12 THEN value ELSE NULL END) AS w, MAX(CASE WHEN node_id = 12 THEN unit ELSE NULL END) AS w_unit, MAX(CASE WHEN node_id = 14 THEN value ELSE NULL END) AS wh, MAX(CASE WHEN node_id = 14 THEN unit ELSE NULL END) AS wh_unit, MAX(CASE WHEN node_id = 16 THEN value ELSE NULL END) AS mode, MAX(CASE WHEN node_id = 17 THEN value ELSE NULL END) AS vcb, MAX(CASE WHEN node_id = 18 THEN value ELSE NULL END) AS ocr, MAX(CASE WHEN node_id = 18 THEN `level` ELSE NULL END) AS ocr_level FROM (SELECT ce.equip_name, ce.current_level AS equip_level, ce.update_dateTime AS update_dt, cs.node_id, cs.current_level AS `level`, IF(SUBSTRING(cs.sensor_type, 1, 1) = 'A', cs.current_value, CASE cs.current_value WHEN 0 THEN cst.d_value_0_label WHEN 1 THEN cst.d_value_1_label WHEN 2 THEN cst.d_value_2_label WHEN 3 THEN cst.d_value_3_label WHEN 4 THEN cst.d_value_4_label WHEN 5 THEN cst.d_value_5_label WHEN 6 THEN cst.d_value_6_label ELSE cst.d_value_7_label END) AS value, IFNULL(pc.disp_unit, '') AS unit FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id JOIN pd_code pc ON pc.code_id = cs.sensor_code WHERE ce.equip_id = ?) d;",
            "sensor": ""
        },
        "d-lv": {
            "group": "",
            "equipment": "SELECT d.equip_name AS equip_name, d.equip_level AS equip_level, DATE_FORMAT(d.update_dt, '%Y.%m.%d %H:%i:%s') AS update_dt, MAX(CASE WHEN node_id = 1 THEN value ELSE NULL END) AS r, MAX(CASE WHEN node_id = 1 THEN unit ELSE NULL END) AS r_unit, MAX(CASE WHEN node_id = 2 THEN value ELSE NULL END) AS s, MAX(CASE WHEN node_id = 2 THEN unit ELSE NULL END) AS s_unit, MAX(CASE WHEN node_id = 3 THEN value ELSE NULL END) AS t, MAX(CASE WHEN node_id = 3 THEN unit ELSE NULL END) AS t_unit, MAX(CASE WHEN node_id = 7 THEN value ELSE NULL END) AS rs, MAX(CASE WHEN node_id = 7 THEN unit ELSE NULL END) AS rs_unit, MAX(CASE WHEN node_id = 8 THEN value ELSE NULL END) AS st, MAX(CASE WHEN node_id = 8 THEN unit ELSE NULL END) AS st_unit, MAX(CASE WHEN node_id = 9 THEN value ELSE NULL END) AS tr, MAX(CASE WHEN node_id = 9 THEN unit ELSE NULL END) AS tr_unit, MAX(CASE WHEN node_id = 10 THEN value ELSE NULL END) AS hz, MAX(CASE WHEN node_id = 10 THEN unit ELSE NULL END) AS hz_unit, MAX(CASE WHEN node_id = 11 THEN value ELSE NULL END) AS pf, MAX(CASE WHEN node_id = 11 THEN unit ELSE NULL END) AS pf_unit, MAX(CASE WHEN node_id = 12 THEN value ELSE NULL END) AS w, MAX(CASE WHEN node_id = 12 THEN unit ELSE NULL END) AS w_unit, MAX(CASE WHEN node_id = 14 THEN value ELSE NULL END) AS wh, MAX(CASE WHEN node_id = 14 THEN unit ELSE NULL END) AS wh_unit, MAX(CASE WHEN node_id = 16 THEN value ELSE NULL END) AS mode, MAX(CASE WHEN node_id = 17 THEN value ELSE NULL END) AS vcb, MAX(CASE WHEN node_id = 18 THEN value ELSE NULL END) AS ocr, MAX(CASE WHEN node_id = 18 THEN `level` ELSE NULL END) AS ocr_level FROM (SELECT ce.equip_name, ce.current_level AS equip_level, ce.update_dateTime AS update_dt, cs.node_id, cs.current_level AS `level`, IF(SUBSTRING(cs.sensor_type, 1, 1) = 'A', cs.current_value, CASE cs.current_value WHEN 0 THEN cst.d_value_0_label WHEN 1 THEN cst.d_value_1_label WHEN 2 THEN cst.d_value_2_label WHEN 3 THEN cst.d_value_3_label WHEN 4 THEN cst.d_value_4_label WHEN 5 THEN cst.d_value_5_label WHEN 6 THEN cst.d_value_6_label ELSE cst.d_value_7_label END) AS value, IFNULL(pc.disp_unit, '') AS unit FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id JOIN pd_code pc ON pc.code_id = cs.sensor_code WHERE ce.equip_id = ?) d;",
            "sensor": ""
        },
        "d-tr": {
            "group": "",
            "equipment": "",
            "sensor": "SELECT ce.equip_name, cs.sensor_name, pc.disp_unit AS unit, DATE_FORMAT(ce.update_dateTime, '%Y.%m.%d %H:%i:%s') AS update_dt FROM cn_sensor cs JOIN cn_equipment ce ON cs.equip_id = ce.equip_id JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE cs.sensor_id = ?;"
        },
        "d-a-dps": {
            "group": "",
            "equipment": "",
            "sensor": "SELECT CASE cs.current_value WHEN 0 THEN cst.d_value_0_label WHEN 1 THEN cst.d_value_1_label WHEN 2 THEN cst.d_value_2_label WHEN 3 THEN cst.d_value_3_label WHEN 4 THEN cst.d_value_4_label WHEN 5 THEN cst.d_value_5_label WHEN 6 THEN cst.d_value_6_label WHEN 7 THEN cst.d_value_7_label ELSE '' END AS value FROM cn_sensor cs LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id WHERE cs.sensor_id = ?;"
        },
        "d-a-h-filter": {
            "group": "",
            "equipment": "",
            "sensor": "SELECT CASE cs.current_value WHEN 0 THEN cst.d_value_0_label WHEN 1 THEN cst.d_value_1_label WHEN 2 THEN cst.d_value_2_label WHEN 3 THEN cst.d_value_3_label WHEN 4 THEN cst.d_value_4_label WHEN 5 THEN cst.d_value_5_label WHEN 6 THEN cst.d_value_6_label WHEN 7 THEN cst.d_value_7_label ELSE '' END AS value FROM cn_sensor cs LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id WHERE cs.sensor_id = ?;"
        },
        "d-a-p-smoke": {
            "group": "",
            "equipment": "",
            "sensor": "SELECT CASE cs.current_value WHEN 0 THEN cst.d_value_0_label WHEN 1 THEN cst.d_value_1_label WHEN 2 THEN cst.d_value_2_label WHEN 3 THEN cst.d_value_3_label WHEN 4 THEN cst.d_value_4_label WHEN 5 THEN cst.d_value_5_label WHEN 6 THEN cst.d_value_6_label WHEN 7 THEN cst.d_value_7_label ELSE '' END AS value FROM cn_sensor cs LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id WHERE cs.sensor_id = ?;"
        },
        "d-a-p-heat-b": {
            "group": "",
            "equipment": "",
            "sensor": "SELECT CASE cs.current_value WHEN 0 THEN cst.d_value_0_label WHEN 1 THEN cst.d_value_1_label WHEN 2 THEN cst.d_value_2_label WHEN 3 THEN cst.d_value_3_label WHEN 4 THEN cst.d_value_4_label WHEN 5 THEN cst.d_value_5_label WHEN 6 THEN cst.d_value_6_label WHEN 7 THEN cst.d_value_7_label ELSE '' END AS value FROM cn_sensor cs LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id WHERE cs.sensor_id = ?;"
        },
        "d-a-fan-l": {
            "group": "",
            "equipment": "",
            "sensor": "SELECT cs.current_value, CASE cs.current_value WHEN 0 THEN cst.d_value_0_label WHEN 1 THEN cst.d_value_1_label WHEN 2 THEN cst.d_value_2_label WHEN 3 THEN cst.d_value_3_label WHEN 4 THEN cst.d_value_4_label WHEN 5 THEN cst.d_value_5_label WHEN 6 THEN cst.d_value_6_label WHEN 7 THEN cst.d_value_7_label ELSE '' END AS value FROM cn_sensor cs LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id WHERE cs.sensor_id = ?;"
        },
        "d-a-fan-r": {
            "group": "",
            "equipment": "",
            "sensor": "SELECT cs.current_value, CASE cs.current_value WHEN 0 THEN cst.d_value_0_label WHEN 1 THEN cst.d_value_1_label WHEN 2 THEN cst.d_value_2_label WHEN 3 THEN cst.d_value_3_label WHEN 4 THEN cst.d_value_4_label WHEN 5 THEN cst.d_value_5_label WHEN 6 THEN cst.d_value_6_label WHEN 7 THEN cst.d_value_7_label ELSE '' END AS value FROM cn_sensor cs LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id WHERE cs.sensor_id = ?;"
        },
        "d-a-ai-label": {
            "group": "",
            "equipment": "",
            "sensor": "SELECT cs.sensor_name AS name, cs.current_value AS `value`, cs.current_level AS `level`, pc.disp_unit AS unit, CASE ce.b_use WHEN 'Y' THEN cs.b_use ELSE 'N' END AS bUse, cs.b_event AS bEvent FROM cn_sensor cs JOIN pd_code pc ON pc.code_id = cs.sensor_code LEFT JOIN cn_equipment ce ON ce.equip_id = cs.equip_id AND ce.b_delete = 'N' WHERE cs.sensor_id = ?;"
        },
        "d-a-di-label": {
            "group": "",
            "equipment": "",
            "sensor": "SELECT CASE cs.current_value WHEN 0 THEN cst.d_value_0_label WHEN 1 THEN cst.d_value_1_label WHEN 2 THEN cst.d_value_2_label WHEN 3 THEN cst.d_value_3_label WHEN 4 THEN cst.d_value_4_label WHEN 5 THEN cst.d_value_5_label WHEN 6 THEN cst.d_value_6_label WHEN 7 THEN cst.d_value_7_label ELSE '' END AS value FROM cn_sensor cs LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id WHERE cs.sensor_id = ?;"
        }
    },
    "cn_rack_diagram": {
        "insert": "INSERT INTO cn_rack_diagram SET ?;",
        "update": "UPDATE cn_rack_diagram SET ? WHERE ?;",
        "delete": "DELETE FROM cn_rack_diagram WHERE ?;",
        "get": "SELECT * FROM cn_rack_diagram WHERE ? ORDER BY z_index;",
        "rack": {
            "equipment": "SELECT equip_name, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS t_val, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN cs.current_level ELSE 0 END) AS t_lvl, MAX(CASE WHEN cs.node_id = 2 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS a_val, MAX(CASE WHEN cs.node_id = 7 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS b_val FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id AND cs.b_delete = 'N' JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE ce.equip_id = ? AND ce.b_delete = 'N';"
        },
        "rack-TT": {
            "equipment": "SELECT equip_name, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS t_val, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN cs.current_level ELSE 0 END) AS t_lvl, MAX(CASE WHEN cs.node_id = 2 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS a_val, MAX(CASE WHEN cs.node_id = 7 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS b_val FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id AND cs.b_delete = 'N' JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE ce.equip_id = ? AND ce.b_delete = 'N';"
        },
        "rack-TM": {
            "equipment": "SELECT equip_name, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS t_val, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN cs.current_level ELSE 0 END) AS t_lvl, MAX(CASE WHEN cs.node_id = 2 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS a_val, MAX(CASE WHEN cs.node_id = 7 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS b_val FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id AND cs.b_delete = 'N' JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE ce.equip_id = ? AND ce.b_delete = 'N';"
        },
        "rack-TB": {
            "equipment": "SELECT equip_name, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS t_val, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN cs.current_level ELSE 0 END) AS t_lvl, MAX(CASE WHEN cs.node_id = 2 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS a_val, MAX(CASE WHEN cs.node_id = 7 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS b_val FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id AND cs.b_delete = 'N' JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE ce.equip_id = ? AND ce.b_delete = 'N';"
        },
        "rackT": {
            "equipment": "SELECT equip_name, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS t_val, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN cs.current_level ELSE 0 END) AS t_lvl, MAX(CASE WHEN cs.node_id = 2 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS a_val, MAX(CASE WHEN cs.node_id = 7 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS b_val FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id AND cs.b_delete = 'N' JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE ce.equip_id = ? AND ce.b_delete = 'N';"
        },
        "rackM": {
            "equipment": "SELECT equip_name, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS t_val, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN cs.current_level ELSE 0 END) AS t_lvl, MAX(CASE WHEN cs.node_id = 2 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS a_val, MAX(CASE WHEN cs.node_id = 7 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS b_val FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id AND cs.b_delete = 'N' JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE ce.equip_id = ? AND ce.b_delete = 'N';"
        },
        "rackB": {
            "equipment": "SELECT equip_name, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS t_val, MAX(CASE WHEN cs.node_id = 1 AND cs.b_use = 'Y' THEN cs.current_level ELSE 0 END) AS t_lvl, MAX(CASE WHEN cs.node_id = 2 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS a_val, MAX(CASE WHEN cs.node_id = 7 AND cs.b_use = 'Y' THEN CONCAT(cs.current_value, pc.disp_unit) ELSE '-' END) AS b_val FROM cn_equipment ce JOIN cn_sensor cs ON ce.equip_id = cs.equip_id AND cs.b_delete = 'N' JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE ce.equip_id = ? AND ce.b_delete = 'N';"
        }
    },
    "cn_pms": {
        "breakerList": "SELECT cp.breaker_id, cp.which, cp.b_use, cp.b_three_phase, cp.pms_number, cp.current_total AS current_total_id, cs.current_value AS current_total, cp.current_r AS current_r_id, cs1.current_value AS current_r, cp.current_s AS current_s_id, cs2.current_value AS current_s, cp.current_t AS current_t_id, cs3.current_value AS current_t, cp.power_factor AS power_factor_id, cs4.current_value AS power_factor, cp.power AS power_id, cs5.current_value AS power, cp.amount_power AS amount_power_id, cs6.current_value AS amount_power FROM cn_pms cp LEFT JOIN cn_sensor cs ON cp.current_total = cs.sensor_id LEFT JOIN cn_sensor cs1 ON cp.current_r = cs1.sensor_id LEFT JOIN cn_sensor cs2 ON cp.current_s = cs2.sensor_id LEFT JOIN cn_sensor cs3 ON cp.current_t = cs3.sensor_id LEFT JOIN cn_sensor cs4 ON cp.power_factor = cs4.sensor_id LEFT JOIN cn_sensor cs5 ON cp.power = cs5.sensor_id LEFT JOIN cn_sensor cs6 ON cp.amount_power = cs6.sensor_id WHERE cp.equip_id = ? AND cp.which = ? AND cp.b_use = 'Y';",
        "breaker": {
            "get": "SELECT cp.breaker_id, cp.b_three_phase, cp.pms_number, cp.current_total, cs.sensor_name AS current_total_name, cp.current_r, cs1.sensor_name AS current_r_name, cp.current_s, cs2.sensor_name AS current_s_name, cp.current_t, cs3.sensor_name AS current_t_name, cp.power_factor, cs4.sensor_name AS power_factor_name, cp.power, cs5.sensor_name AS power_name, cp.amount_power, cs6.sensor_name AS amount_power_name FROM cn_pms cp LEFT JOIN cn_sensor cs ON cp.current_total = cs.sensor_id LEFT JOIN cn_sensor cs1 ON cp.current_r = cs1.sensor_id LEFT JOIN cn_sensor cs2 ON cp.current_s = cs2.sensor_id LEFT JOIN cn_sensor cs3 ON cp.current_t = cs3.sensor_id LEFT JOIN cn_sensor cs4 ON cp.power_factor = cs4.sensor_id LEFT JOIN cn_sensor cs5 ON cp.power = cs5.sensor_id LEFT JOIN cn_sensor cs6 ON cp.amount_power = cs6.sensor_id WHERE cp.equip_id = ? AND cp.breaker_id = ? AND cp.b_use = 'Y';",
            "set": "INSERT INTO cn_pms SET ? ON DUPLICATE KEY UPDATE ?;"
        },
        "report": {
            "get": "SELECT cg.group_name, ce.equip_name, cp.pms_number, cs.sensor_name, CASE b_three_phase WHEN 'Y' THEN '3상' WHEN 'N' THEN '단상' END AS phase,  cp.current_total AS current_id, TRUNCATE(cs.current_value, 1) AS current_value, CASE cp.b_three_phase WHEN 'Y' THEN TRUNCATE(cs.current_value, 1) * 380 WHEN 'N' THEN TRUNCATE(cs.current_value, 1) * 220 END AS `power`, CASE cp.b_three_phase WHEN 'Y' THEN TRUNCATE(((TRUNCATE(cs.current_value, 1) * 380) * 24 * 1.732050807) / 1000, 2) WHEN 'N' THEN TRUNCATE(((TRUNCATE(cs.current_value, 1) * 220) * 24) / 1000, 2) END AS power_amount FROM cn_pms cp JOIN cn_equipment ce ON cp.equip_id = ce.equip_id JOIN cn_group cg ON ce.group_id = cg.group_id JOIN cn_sensor cs ON cp.current_total = cs.sensor_id WHERE cp.equip_id = ? ORDER BY cp.pms_number;"
        }
    },
    "ft_current_alarm": {
        "monitoring": "SELECT vca.equip_id, vca.equip_name, (SELECT code_name FROM pd_code WHERE code_id = pe.equip_code) AS equip_kind, vca.sensor_id, vca.sensor_name, IFNULL((SELECT code_name FROM pd_code WHERE code_id = cs.sensor_code), '') AS sensor_kind, vca.`level` AS alarm_level, vca.level_text, vca.alarm_msg, DATE_FORMAT(vca.occur_date, '%Y/%m/%d %H:%i:%s') AS occur_date FROM view_current_alarm vca JOIN cn_equipment ce ON vca.equip_id = ce.equip_id JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id LEFT JOIN cn_sensor cs ON vca.sensor_id = cs.sensor_id WHERE FIND_IN_SET(ce.group_id, ?) ORDER BY vca.occur_date DESC, vca.equip_name, vca.sensor_name;",
        "statistics": "SELECT vca.`level` AS idx, vca.level_text, COUNT(vca.`level`) AS alarm_cnt FROM view_current_alarm vca JOIN cn_equipment ce ON vca.equip_id = ce.equip_id WHERE FIND_IN_SET(ce.group_id, ?) GROUP BY vca.`level`;",
        "delete": "DELETE FROM ft_current_alarm WHERE ?;",
        "pss": {
            "alarmlist": "SELECT vca.equip_id, vca.equip_name, vca.`level` AS lvl, vca.level_text AS lvl_text, vca.alarm_msg, DATE_FORMAT(vca.occur_date, '%Y/%m/%d %H:%i:%s') AS occur_date FROM view_current_alarm vca JOIN cn_equipment ce ON vca.equip_id = ce.equip_id WHERE vca.`level` < 4 AND FIND_IN_SET(ce.group_id, ?) GROUP BY vca.equip_id ORDER BY vca.occur_date DESC;"
        },
        "external": {
            "list": "SELECT * FROM view_current_alarm;"
        }
    },
    "ft_history_alarm": {
        "fault": {
            "read": "SELECT fh.alarmHistoryId, fh.alarm_level, c1.code_name AS equip_kind, ce.group_id, cg.group_name, ce.equip_id, ce.equip_name, cs.sensor_id, cs.sensor_name, IFNULL(cs.b_use, 'Y') AS sensor_use, IF(SUBSTRING(fh.alarm_code, 1, 1) = 'E', '', c2.code_name) AS sensor_kind, DATE_FORMAT(fh.occur_date, '%Y/%m/%d %H:%i:%S') AS occur_date, IF(DATE_FORMAT(fh.recovery_date, '%Y/%m/%d %H:%i:%S') = '0000/00/00 00:00:00', '', DATE_FORMAT(fh.recovery_date, '%Y/%m/%d %H:%i:%S')) AS recovery_date, fh.alarm_msg, fha.alarmActionHistoryId, DATE_FORMAT(fha.action_date,'%Y/%m/%d %H:%i') AS action_date, fha.action_user_name, fha.action_content FROM ft_history_alarm fh LEFT JOIN ft_history_alarm_action fha ON fha.alarmHistoryId = fh.alarmHistoryId LEFT JOIN cn_sensor cs ON cs.sensor_id = fh.sensor_id LEFT JOIN cn_equipment ce ON ce.equip_id = fh.equip_id LEFT JOIN cn_group cg ON ce.group_id = cg.group_id LEFT JOIN pd_equipment pe ON pe.pd_equip_id = ce.pd_equip_id LEFT JOIN pd_code c1 ON c1.code_id = pe.equip_code LEFT JOIN pd_code c2 ON c2.code_id = fh.alarm_code WHERE ce.b_delete = 'N' AND c1.code_type = 'E' AND fh.equip_id = ? AND fh.occur_date >= ? AND fh.occur_date < ? ORDER BY occur_date DESC, sensor_id DESC;"
        },
        "history": {
            "get": "SELECT fh.alarmHistoryId, fh.alarm_level, c3.code_name AS alarm_level_text, c1.code_name AS equip_kind, ce.group_id, cg.group_name, ce.equip_id, ce.equip_name, cs.sensor_id, cs.sensor_name, CASE ISNULL(fh.sensor_id) WHEN 0 THEN ce.b_use ELSE IFNULL(cs.b_use, 'Y') END AS sensor_use, IF(SUBSTRING(fh.alarm_code, 1, 1) = 'E', '', c2.code_name) AS sensor_kind, DATE_FORMAT(fh.occur_date, '%Y/%m/%d %H:%i:%S') AS occur_date, IF(DATE_FORMAT(fh.recovery_date, '%Y/%m/%d %H:%i:%S') = '0000/00/00 00:00:00', '', DATE_FORMAT(fh.recovery_date, '%Y/%m/%d %H:%i:%S')) AS recovery_date, TIMESTAMPDIFF(SECOND, occur_date, recovery_date) AS period, fh.alarm_msg, fha.alarmActionHistoryId, DATE_FORMAT(fha.action_date,'%Y/%m/%d %H:%i') AS action_date, fha.action_user_name, fha.action_content FROM ft_history_alarm fh LEFT JOIN ft_history_alarm_action fha ON fha.alarmHistoryId = fh.alarmHistoryId LEFT JOIN cn_sensor cs ON cs.sensor_id = fh.sensor_id LEFT JOIN cn_equipment ce ON ce.equip_id = fh.equip_id LEFT JOIN cn_group cg ON ce.group_id = cg.group_id LEFT JOIN pd_equipment pe ON pe.pd_equip_id = ce.pd_equip_id LEFT JOIN pd_code c1 ON c1.code_id = pe.equip_code LEFT JOIN pd_code c2 ON c2.code_id = fh.alarm_code LEFT JOIN pd_code c3 ON c3.code_type = 'A' AND c3.code_int = fh.alarm_level WHERE FIND_IN_SET(fh.alarm_level, ?) AND FIND_IN_SET(fh.equip_id, ?) AND fh.occur_date BETWEEN ? AND ? ORDER BY occur_date DESC LIMIT 0, 100000;"
        },
        "recover": {
            "equipment": "UPDATE ft_history_alarm SET recovery_date = CURRENT_TIMESTAMP() WHERE ISNULL(recovery_date) AND equip_id = ?;"
        }
    },
    "ft_history_alarm_action": {
        "get": "SELECT * FROM ft_history_alarm_action WHERE ?;",
        "insert": "INSERT INTO ft_history_alarm_action SET ?;",
        "update": "UPDATE ft_history_alarm_action SET ? WHERE ?;",
        "delete": "DELETE FROM ft_history_alarm_action WHERE ?;"
    },
    "pd_code": {
        "insert": "INSERT INTO pd_code SET ?;",
        "update": "UPDATE pd_code SET ? WHERE ?;",
        "delete": "DELETE FROM pd_code WHERE ?;",
        "byType": "SELECT pc.code_int, pc.code_type, pc.code_id, pc.code_name, pc.description, pc.disp_unit, 0 AS old_id, CONCAT(code_id, ' | ', code_name) AS code_string FROM pd_code pc WHERE pc.code_type = ?;",
        "codeList": "SELECT DISTINCT code_type FROM pd_code;",
        "A": {
            "grade": "SELECT code_int AS value, code_name AS text, description AS caption FROM pd_code WHERE code_type = 'A' AND code_int < 4;"
        },
        "DTY": {
            "list": "SELECT code_int, code_name, CONCAT(description, ' (', code_name, ')') AS description FROM pd_code WHERE code_type = 'DTY';"
        },
        "E": {
            "map": "SELECT code_id AS id, 'G_0' AS pid, code_name AS name, pc.description AS description, '' AS imageName FROM pd_code pc WHERE code_id = ?;"
        },
        "S": {
            "type": "SELECT code_id AS value, IF(ISNULL(disp_unit), code_name, CONCAT(code_name, ' (', disp_unit, ')')) AS `text`, disp_unit AS unit FROM pd_code WHERE code_type = 'S';"
        },
        "USR": {
            "subGrade": "SELECT pc.code_id AS id, pc.code_name AS name FROM pd_code pc WHERE pc.code_type = 'USR' AND pc.code_id >= ?;"
        }
    },
    "pd_code_description": {
        "get": "SELECT code_description FROM pd_code_description WHERE code_type = ?;",
        "insert": "INSERT INTO pd_code_description SET ?;",
        "update": "UPDATE pd_code_description SET ? WHERE ?;",
        "delete": "DELETE FROM pd_code_description WHERE ?;"
    },
    "pd_equipment": {
        "byCode": "SELECT pe.pd_equip_id, pe.equip_name, pe.equip_model_name, pe.io_type_code, (SELECT code_name FROM pd_code pc WHERE pe.io_type_code = pc.code_id) AS io_type_name FROM pd_equipment pe WHERE equip_code = ?;",
        "insert": "INSERT INTO pd_equipment(pd_equip_id, equip_model_name, equip_code, equip_name, io_type_code, pd_manu_id) SELECT LAST_INSERT_ID(MAX(pd_equip_id) + 1) AS pd_equip_id, '' AS equip_model_name, ? AS equip_code, '' AS equip_name, ? AS io_type_code, 0 AS pd_manu_id FROM pd_equipment;",
        "update": "UPDATE pd_equipment SET ? WHERE ?;",
        "delete": "DELETE FROM pd_equipment WHERE ?;"
    },
    "pd_sensor": {
        "get": "SELECT ps.pd_equip_id, ps.pd_sensor_id, ps.sensor_name, ps.sensor_type, ps.sensor_code, IF(ISNULL(pc.disp_unit), CONCAT(pc.code_id, ' | ', pc.code_name), CONCAT(pc.code_id, ' | ', pc.code_name, ' (', pc.disp_unit, ')')) AS sensor_code_name, ps.pd_threshold_id, pst.threshold_name AS pd_threshold_name, ps.oid, ps.node_id, ps.div_value, ps.mc_id FROM pd_sensor ps JOIN pd_code pc ON ps.sensor_code = pc.code_id LEFT JOIN pd_sensor_threshold pst ON ps.pd_threshold_id = pst.pd_threshold_id WHERE ?;",
        "insert": "INSERT INTO pd_sensor (pd_sensor_id, pd_equip_id, pd_threshold_id, sensor_code, sensor_type, sensor_name, oid, node_id) SELECT IFNULL(MAX(pd_sensor_id) + 1, ? * 1000 + 1) AS pd_sensor_id, ? AS pd_equip_id, 0 AS pd_threshold_id, 'S0001' AS sensor_code, 'AI' AS sensor_type, '' AS sensor_name, '' AS oid, IFNULL(MAX(node_id) + 1, 1) AS node_id FROM pd_sensor ps WHERE ps.pd_equip_id = ?;",
        "update": "UPDATE pd_sensor SET ? WHERE ?;",
        "updateToModbudId": "UPDATE pd_sensor SET mc_id = (CASE mc_id WHEN ? THEN 0 ELSE mc_id - 1 END) WHERE pd_equip_id = ? AND mc_id >= ?;",
        "delete": "DELETE FROM pd_sensor WHERE ?;",
        "deleteAndIndexReset": "DELETE FROM pd_sensor WHERE pd_sensor_id = ?;UPDATE pd_sensor SET pd_sensor_id = pd_sensor_id - 1, node_id = node_id - 1 WHERE pd_equip_id = ? AND pd_sensor_id > ?;"
    },
    "pd_sensor_threshold": {
        "byCode": "SELECT pst.pd_threshold_id, pst.sensor_code, IFNULL(pst.threshold_name, '') AS pd_threshold_name, IFNULL(pst.a_warning_min, 0) AS a_warning_min, IFNULL(pst.a_warning_max, 0) AS a_warning_max, IFNULL(pst.a_major_min, 0) AS a_major_min, IFNULL(pst.a_major_max, 0) AS a_major_max, IFNULL(pst.a_critical_min, 0) AS a_critical_min, IFNULL(pst.a_critical_max, 0) AS a_critical_max, IFNULL(pst.d_value_0_label, '') AS d_value_0_label, pst.d_value_0_level, IFNULL(pst.d_value_1_label, '') AS d_value_1_label,  d_value_1_level, IFNULL(pst.d_value_2_label, '') AS d_value_2_label, d_value_2_level, IFNULL(pst.d_value_3_label, '') AS d_value_3_label, d_value_3_level, IFNULL(pst.d_value_4_label, '') AS d_value_4_label, d_value_4_level, IFNULL(pst.d_value_5_label, '') AS d_value_5_label, d_value_5_level, IFNULL(pst.d_value_6_label, '') AS d_value_6_label, d_value_6_level, IFNULL(pst.d_value_7_label, '') AS d_value_7_label, d_value_7_level FROM pd_sensor_threshold pst WHERE pst.sensor_code = ?;",
        "insert": "INSERT INTO pd_sensor_threshold (pd_threshold_id, sensor_code, holding_time) SELECT MAX(pd_threshold_id) + 1 AS pd_threshold_id, ? AS sensor_code, 0 AS holding_time FROM pd_sensor_threshold;",
        "update": "UPDATE pd_sensor_threshold SET ? WHERE ?;",
        "delete": "DELETE FROM pd_sensor_threshold WHERE ?;"
    },
    "pd_modbus_cmd": {
        "get": "SELECT pmc.pd_equip_id, pe.equip_name, pmc.mc_id, pmc.function_code, pmc.start_addr, pmc.point_cnt, pmc.data_type, CONCAT(pc.description, ' (', pmc.data_type, ')') AS description FROM pd_modbus_cmd pmc JOIN pd_equipment pe ON pmc.pd_equip_id = pe.pd_equip_id JOIN pd_code pc ON pmc.data_type = pc.code_name WHERE pmc.pd_equip_id = ? ORDER BY pmc.mc_id;",
        "insert": "INSERT INTO pd_modbus_cmd(pd_equip_id, mc_id, function_code, start_addr, point_cnt, data_type) SELECT ? AS pd_equip_id, IFNULL(MAX(mc_id) + 1, 1) AS mc_id, 1 AS function_code, 0 AS start_addr, 0 AS point_cnt, 'I2' AS data_type FROM pd_modbus_cmd WHERE pd_equip_id = ?;",
        "update": "UPDATE pd_modbus_cmd SET ? WHERE pd_equip_id = ? AND mc_id = ?;",
        "delete": "DELETE FROM pd_modbus_cmd WHERE pd_equip_id = ? AND mc_id = ?;",
        "deleteAndResetId": "DELETE FROM pd_modbus_cmd WHERE pd_equip_id = ? AND mc_id = ?;UPDATE pd_modbus_cmd SET mc_id = mc_id - 1 WHERE pd_equip_id = ? AND mc_id > ?;",
        "deleteByPdEquipId": "DELETE FROM pd_modbus_cmd WHERE ?;"
    },
    "rpt_st2": {
        "hourByEquipment": "SELECT rs.equip_id, rs.sensor_id, ce.equip_name, cs.sensor_name, IFNULL(pc.disp_unit, '') AS unit, DATE_FORMAT(STR_TO_DATE(rs.STAT_DATE, '%Y%m%d%H'), '%Y/%m/%d %H:00') AS stat_date, rs.M00 AS MI00, rs.M05 AS MI05, rs.M10 AS MI10, rs.M15 AS MI15, rs.M20 AS MI20, rs.M25 AS MI25, rs.M30 AS MI30, rs.M35 AS MI35, rs.M40 AS MI40, rs.M45 AS MI45, rs.M50 AS MI50, rs.M55 AS MI55 FROM rpt_st2_hour rs JOIN cn_equipment ce ON rs.equip_id = ce.equip_id JOIN cn_sensor cs ON rs.sensor_id = cs.sensor_id JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE rs.equip_id = $$1 AND rs.sensor_id IN ($$2) AND rs.STAT_DATE BETWEEN $$3 AND $$4 LIMIT 0, 110000;",
        "dayByEquipment": "SELECT rs.equip_id, rs.sensor_id, ce.equip_name, cs.sensor_name, IFNULL(pc.disp_unit, '') AS unit, DATE_FORMAT(STR_TO_DATE(rs.STAT_DATE, '%Y%m%d%H'), '%Y/%m/%d') AS stat_date, rs.H00, rs.H01, rs.H02, rs.H03, rs.H04, rs.H05, rs.H06, rs.H07, rs.H08, rs.H09, rs.H10, rs.H11, rs.H12, rs.H13, rs.H14, rs.H15, rs.H16, rs.H17, rs.H18, rs.H19, rs.H20, rs.H21, rs.H22, rs.H23 FROM rpt_st2_day rs JOIN cn_equipment ce ON rs.equip_id = ce.equip_id JOIN cn_sensor cs ON rs.sensor_id = cs.sensor_id JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE rs.equip_id = $$1 AND rs.sensor_id IN ($$2) AND rs.STAT_DATE BETWEEN $$3 AND $$4 LIMIT 0, 110000;",
        "monthByEquipment": "SELECT rs.equip_id, rs.sensor_id, ce.equip_name, cs.sensor_name, IFNULL(pc.disp_unit, '') AS unit, DATE_FORMAT(STR_TO_DATE(rs.STAT_DATE, '%Y%m%d%H'), '%Y년 %m월') AS stat_date, rs.D01, rs.D02, rs.D03, rs.D04, rs.D05, rs.D06, rs.D07, rs.D08, rs.D09, rs.D10, rs.D11, rs.D12, rs.D13, rs.D14, rs.D15, rs.D16, rs.D17, rs.D18, rs.D19, rs.D20, rs.D21, rs.D22, rs.D23, rs.D24, rs.D25, rs.D26, rs.D27, rs.D28, rs.D29, rs.D30, rs.D31 FROM rpt_st2_month rs JOIN cn_equipment ce ON rs.equip_id = ce.equip_id JOIN cn_sensor cs ON rs.sensor_id = cs.sensor_id JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE rs.equip_id = $$1 AND rs.sensor_id IN ($$2) AND rs.STAT_DATE BETWEEN $$3 AND $$4 LIMIT 0, 110000;",
        "yearByEquipment": "SELECT rs.equip_id, rs.sensor_id, ce.equip_name, cs.sensor_name, IFNULL(pc.disp_unit, '') AS unit, DATE_FORMAT(STR_TO_DATE(rs.STAT_DATE, '%Y%m%d%H'), '%Y년') AS stat_date, rs.M01 AS MO01, rs.M02 AS MO02, rs.M03 AS MO03, rs.M04 AS MO04, rs.M05 AS MO05, rs.M06 AS MO06, rs.M07 AS MO07, rs.M08 AS MO08, rs.M09 AS MO09, rs.M10 AS MO10, rs.M11 AS MO11, rs.M12 AS MO12 FROM rpt_st2_year rs JOIN cn_equipment ce ON rs.equip_id = ce.equip_id JOIN cn_sensor cs ON rs.sensor_id = cs.sensor_id JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE rs.equip_id = $$1 AND rs.sensor_id IN ($$2) AND rs.STAT_DATE BETWEEN $$3 AND $$4 LIMIT 0, 110000;"
    },
    "st_aisensor": {
        "sensorChart": "SELECT s.stat_date, DATE_FORMAT(s.stat_date, '%Y/%m/%d') AS date_day, DATE_FORMAT(s.stat_date, '%H:%i') AS date_hour, s.sensor_id, CAST(TRUNCATE(s.avr_value, 2) AS DECIMAL(12, 2)) AS val, CAST(TRUNCATE(s.min_value, 2) AS DECIMAL(12, 2)) AS min_val, CAST(TRUNCATE(s.max_value, 2) AS DECIMAL(12, 2)) AS max_val, IFNULL(pc.disp_unit, '') AS unit FROM st_aisensor_$$ s JOIN cn_sensor cs ON s.sensor_id = cs.sensor_id JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE s.sensor_id = ? AND s.stat_date >= ? AND s.stat_date < ? ORDER BY s.stat_date;",
        "dataStatistics": "SELECT sam.stat_date, sam.start_date, sam.end_date, sam.equip_id, sam.sensor_id, sam.min_value, sam.avr_value, sam.max_value FROM st_aisensor_$$1 sam WHERE sam.equip_id = $$2 AND sam.sensor_id IN ($$3) AND sam.stat_date BETWEEN '$$4' AND '$$5'",
        "dataStatisticsTotal": "SELECT COUNT(1) AS total FROM st_aisensor_$$1 WHERE equip_id IN ($$2) AND sensor_id IN ($$3) AND stat_date BETWEEN '$$4' AND '$$5'",
        "dataListByEquipment": "SELECT sa.equip_id, sa.sensor_id, ce.equip_name, cs.sensor_name, $$1 AS period, sa.min_value, sa.avr_value, sa.max_value, TRUNCATE(sa.max_value, 2) - TRUNCATE(sa.min_value, 2) AS range_value, IFNULL(pc.disp_unit, '') AS unit FROM st_aisensor_$$2 sa LEFT JOIN cn_equipment ce ON sa.equip_id = ce.equip_id JOIN cn_sensor cs ON sa.sensor_id = cs.sensor_id JOIN pd_code pc ON cs.sensor_code = pc.code_id WHERE sa.equip_id = $$3 AND sa.sensor_id IN ($$4) AND sa.stat_date BETWEEN '$$5' AND '$$6' LIMIT 0, 110000;",
        "wrfis": {
            "reports": {
                "upsDaily": "SELECT '$TIME$' AS IDX, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T1$' AND cs.user_define = 'i_v') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T1$_IV`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T1$' AND cs.user_define = 'i_c') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T1$_IC`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T1$' AND cs.user_define = 'o_v') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T1$_OV`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T1$' AND cs.user_define = 'o_c') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T1$_OC`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T1$' AND cs.user_define = 'o_f') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T1$_OF`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T1$' AND cs.user_define = 'o_l') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T1$_OL`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T1$' AND cs.user_define = 'b_v') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T1$_BV`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T1$' AND cs.user_define = 'b_c') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T1$_BC`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T2$' AND cs.user_define = 'i_v') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T2$_IV`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T2$' AND cs.user_define = 'i_c') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T2$_IC`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T2$' AND cs.user_define = 'o_v') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T2$_OV`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T2$' AND cs.user_define = 'o_c') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T2$_OC`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T2$' AND cs.user_define = 'o_f') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T2$_OF`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T2$' AND cs.user_define = 'o_l') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T2$_OL`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T2$' AND cs.user_define = 'b_v') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T2$_BV`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T2$' AND cs.user_define = 'b_c') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T2$_BC`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T3$' AND cs.user_define = 'i_v') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T3$_IV`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T3$' AND cs.user_define = 'i_c') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T3$_IC`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T3$' AND cs.user_define = 'o_v') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T3$_OV`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T3$' AND cs.user_define = 'o_c') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T3$_OC`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T3$' AND cs.user_define = 'o_f') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T3$_OF`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T3$' AND cs.user_define = 'o_l') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T3$_OL`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T3$' AND cs.user_define = 'b_v') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T3$_BV`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T3$' AND cs.user_define = 'b_c') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T3$_BC`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T4$' AND cs.user_define = 'i_v') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T4$_IV`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T4$' AND cs.user_define = 'i_c') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T4$_IC`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T4$' AND cs.user_define = 'o_v') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T4$_OV`, IFNULL(ROUND((SELECT AVG(sa.avr_value) FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T4$' AND cs.user_define = 'o_c') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T4$_OC`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T4$' AND cs.user_define = 'o_f') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T4$_OF`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T4$' AND cs.user_define = 'o_l') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T4$_OL`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T4$' AND cs.user_define = 'b_v') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T4$_BV`, IFNULL(ROUND((SELECT sa.avr_value FROM st_aisensor_hour sa WHERE (sa.equip_id, sa.sensor_id) IN (SELECT cs.equip_id, cs.sensor_id FROM cn_sensor cs JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE ce.user_define = '$T4$' AND cs.user_define = 'b_c') AND sa.stat_date = '$DATETIME$'), 1), '$EMPTY$') AS `$T4$_BC`",
                "temphumiStat": "SELECT DATE_FORMAT(sa.stat_date, '%Y/%m/%d %H:%i') AS stat_date, sa.equip_id, MAX(CASE WHEN cs.sensor_code = 'S0001' THEN TRUNCATE(sa.min_value, 2) ELSE NULL END) AS t_min, MAX(CASE WHEN cs.sensor_code = 'S0001' THEN TRUNCATE(sa.avr_value, 2) ELSE NULL END) AS t_avg, MAX(CASE WHEN cs.sensor_code = 'S0001' THEN TRUNCATE(sa.max_value, 2) ELSE NULL END) AS t_max, MAX(CASE WHEN cs.sensor_code = 'S0002' THEN TRUNCATE(sa.min_value, 2) ELSE NULL END) AS h_min, MAX(CASE WHEN cs.sensor_code = 'S0002' THEN TRUNCATE(sa.avr_value, 2) ELSE NULL END) AS h_avg, MAX(CASE WHEN cs.sensor_code = 'S0002' THEN TRUNCATE(sa.max_value, 2) ELSE NULL END) AS h_max FROM st_aisensor_$$1 sa LEFT JOIN cn_sensor cs ON sa.sensor_id = cs.sensor_id WHERE sa.equip_id = ? AND sa.sensor_id IN (SELECT sa.sensor_id FROM cn_sensor WHERE equip_id = ?) AND sa.stat_date BETWEEN ? AND ? AND sa.succ > 0 GROUP BY sa.stat_date ORDER BY sa.stat_date LIMIT 10000;",
                "ups_usage_power": "SELECT t.object_name AS object_name, TRUNCATE(AVG(t.sum_val), 0) AS val FROM (SELECT cim.object_name, SUM(cs.current_value) AS sum_val FROM st_aisensor_$$1 sam JOIN cn_icomer_mapping cim ON cim.page_name = 'i_r_ups' AND SUBSTRING(cim.object_name, 1, 4) = 'watt' JOIN cn_sensor cs ON sam.sensor_id = cs.sensor_id AND cs.sensor_code = 'S0009' AND cs.b_delete = 'N' AND cs.b_use = 'Y' WHERE FIND_IN_SET(sam.sensor_id, cim.sensor_ids) AND sam.stat_date BETWEEN ? AND ? GROUP BY sam.equip_id, sam.stat_date LIMIT 100000) t GROUP BY t.object_name",
                "ups_usage_load": "SELECT t.object_name AS object_name, TRUNCATE(AVG(t.sum_val), 0) AS val FROM (SELECT cim.object_name, SUM(cs.current_value) AS sum_val FROM st_aisensor_$$1 sam JOIN cn_icomer_mapping cim ON cim.page_name = 'i_r_ups' AND SUBSTRING(cim.object_name, 1, 4) = 'load' JOIN cn_sensor cs ON sam.sensor_id = cs.sensor_id AND cs.sensor_code = 'S0008' AND cs.b_delete = 'N' AND cs.b_use = 'Y' WHERE FIND_IN_SET(sam.sensor_id, cim.sensor_ids) AND sam.stat_date BETWEEN ? AND ? GROUP BY sam.equip_id, sam.stat_date LIMIT 100000) t GROUP BY t.object_name",
                "pue": "SELECT $$1 AS idx, ce.equip_name, cs.sensor_name, DATE_FORMAT(sam.stat_date, '%Y/%m/%d %H:%i') AS period, TRUNCATE(sam.min_value, 2) AS min_val, ROUND(TRUNCATE(sam.avr_value, 3), 2) AS avg_val, TRUNCATE(sam.max_value, 2) AS max_val, TRUNCATE(sam.max_value, 2) - TRUNCATE(sam.min_value, 2) AS diff FROM st_aisensor_$$2 sam JOIN cn_icomer_mapping cim ON cim.page_name = 'i_r_pue' AND cim.object_name = 'PUE' JOIN cn_sensor cs ON sam.sensor_id = cs.sensor_id AND cs.sensor_code = 'S0003' AND cs.b_delete = 'N' AND cs.b_use = 'Y' LEFT JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE FIND_IN_SET(sam.sensor_id, cim.sensor_ids) AND sam.stat_date BETWEEN '$$3' AND DATE_ADD('$$3', INTERVAL 1 $$4) - INTERVAL 1 SECOND;",
                "pueextra": "SELECT $$1 AS idx, ce.equip_name, cs.sensor_name, DATE_FORMAT(sam.stat_date, '%Y/%m/%d %H:%i') AS period, TRUNCATE(sam.min_value, 2) AS min_val, ROUND(TRUNCATE(sam.avr_value, 3), 2) AS avg_val, TRUNCATE(sam.max_value, 2) AS max_val, TRUNCATE(sam.max_value, 2) - TRUNCATE(sam.min_value, 2) AS diff FROM st_aisensor_$$2 sam JOIN cn_icomer_mapping cim ON cim.page_name = 'i_r_pue' AND cim.object_name = 'PUEEXTRA' JOIN cn_sensor cs ON sam.sensor_id = cs.sensor_id AND cs.sensor_code = 'S0003' AND cs.b_delete = 'N' AND cs.b_use = 'Y' LEFT JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE FIND_IN_SET(sam.sensor_id, cim.sensor_ids) AND sam.stat_date BETWEEN '$$3' AND DATE_ADD('$$3', INTERVAL 1 $$4) - INTERVAL 1 SECOND;",
                "hvac": "SELECT sam.start_date AS period, ce.equip_name, ROUND(AVG(CASE WHEN cs.node_id = 1 THEN TRUNCATE(sam.avr_value, 2) ELSE NULL END), 2) AS temp, ROUND(AVG(CASE WHEN cs.node_id = 2 THEN TRUNCATE(sam.avr_value, 2) ELSE NULL END), 2) AS humi, fn_disensor_duration(ce.equip_id, cs2.sensor_id, 1, '$$2', IF(CURRENT_TIMESTAMP < DATE_ADD('$$2', INTERVAL 1 $$3), CURRENT_TIMESTAMP, DATE_ADD('$$2', INTERVAL 1 $$3))) AS duration, cs2.sensor_id FROM st_aisensor_$$1 sam JOIN cn_equipment ce ON sam.equip_id = ce.equip_id AND ce.b_delete = 'N' AND ce.b_use = 'Y' JOIN cn_sensor cs ON sam.sensor_id = cs.sensor_id AND cs.node_id IN (1, 2) AND cs.b_delete = 'N' AND cs.b_use = 'Y' JOIN cn_sensor cs2 ON ce.equip_id = cs2.equip_id AND cs2.sensor_code = 'S0019' AND cs2.b_delete = 'N' AND cs2.b_use = 'Y' WHERE ce.equip_id = ? AND sam.stat_date BETWEEN '$$2' AND DATE_ADD('$$2', INTERVAL 1 $$3) - INTERVAL 1 SECOND;",
                "temphumiStatAvg": "SELECT $$1 AS idx, cs.sensor_id, DATE_FORMAT(sam.stat_date, '%Y/%m/%d %H:%i') AS period, AVG(CASE WHEN cs.sensor_code = 'S0001' THEN ROUND(TRUNCATE(sam.avr_value, 3), 2) ELSE NULL END) AS avg_temp, AVG(CASE WHEN cs.sensor_code = 'S0002' THEN ROUND(TRUNCATE(sam.avr_value, 3), 2) ELSE NULL END) AS avg_humi FROM st_aisensor_$$2 sam JOIN cn_icomer_mapping cim ON cim.page_name = 'i_th' AND cim.object_name IN ('avg_temp', 'avg_humi') JOIN cn_sensor cs ON sam.sensor_id = cs.sensor_id AND cs.sensor_code IN ('S0001', 'S0002') AND cs.b_delete = 'N' AND cs.b_use = 'Y' LEFT JOIN cn_equipment ce ON ce.equip_id = cs.equip_id WHERE FIND_IN_SET(sam.sensor_id, cim.sensor_ids) AND sam.avr_value < 100 AND sam.stat_date BETWEEN '$$3' AND DATE_ADD('$$3', INTERVAL 1 $$4) - INTERVAL 1 SECOND GROUP BY idx;"
            },
            "bms": {
                "BTECH_CQ2": "SELECT sad.sensor_id, cs.node_id, cs.sensor_name, CAST(TRUNCATE(sad.avr_value, 1) AS DECIMAL(12,1)) AS val, DATE_FORMAT(sad.stat_date, '%Y/%m/%d') AS date_day FROM st_aisensor_day sad JOIN cn_sensor cs ON sad.sensor_id = cs.sensor_id WHERE sad.stat_date = ? AND sad.equip_id = ?;"
            }
        }
    },
    "lg_disensor_history": {
        "disensorChart": "SELECT $equipid$ AS equip_id, $sensorid$ AS sensor_id, $startdate$ AS lDate, fn_disensor_then_value($equipid$, $sensorid$, $startdate$) AS val UNION ALL SELECT ldh.equip_id, ldh.sensor_id, ldh.create_date AS lDate, ldh.current_value AS val FROM lg_disensor_history ldh WHERE ldh.equip_id = $equipid$ AND ldh.sensor_id = $sensorid$ AND ldh.create_date BETWEEN $startdate$ AND $enddate$ UNION ALL SELECT $equipid$ AS equip_id, $sensorid$ AS sensor_id, $enddate$ AS lDate, fn_disensor_then_value($equipid$, $sensorid$, $enddate$) AS val;"
    },
    "lg_user_cmd_history": {
        "insert": "INSERT INTO lg_user_cmd_history SET ?;"
    },
    "lg_work_history2": {
        "insert": "INSERT INTO lg_work_history2 SET ?;",
        "get": "SELECT lwh.work_id, lwh.user_id, lwh.user_name, lwh.user_ip, DATE_FORMAT(lwh.work_date, '%Y/%m/%d %H:%i:%s') AS work_date, lwh.worker_place, lwh.target_name, lwh.content FROM lg_work_history2 lwh FORCE INDEX (work_date) WHERE lwh.work_date BETWEEN '$$1' AND '$$2' LIMIT 0, 11000;"
    },
    "in_code": {
        "typeList": "SELECT in_code.id, in_code.`type`, in_code.name, in_code.icon, in_code.description FROM in_code WHERE in_code.type = ? ORDER BY in_code.id;",
        "list": "SELECT ic.`type` AS id, NULL AS `type`, ic.`type` AS name, NULL AS icon, NULL AS description FROM in_code ic GROUP BY ic.type UNION ALL SELECT ic.id, ic.`type`, ic.name, ic.icon, ic.description FROM in_code ic;",
        "set": "INSERT INTO in_code SET ? ON DUPLICATE KEY UPDATE ?;",
        "delete": "DELETE FROM in_code WHERE ?;"
    },
    "in_company": {
        "get": "SELECT * FROM in_company WHERE in_company.b_delete = false AND in_company.id = ? ORDER BY in_company.id;",
        "list": "SELECT * FROM in_company WHERE in_company.b_delete = false ORDER BY in_company.id;",
        "insert": "INSERT INTO in_company SET ?;",
        "update": "UPDATE in_company SET ? WHERE ?;",
        "delete": "UPDATE in_company SET b_delete = true WHERE ?;"
    },
    "in_worker": {
        "get": "SELECT in_worker.id, in_worker.code_id, in_code.name AS code_name, in_worker.name, in_worker.telephone, in_worker.phone, in_worker.email, if((SELECT in_company.b_delete FROM in_company WHERE in_company.id = in_worker.company_id) = true, '0' , in_worker.company_id) AS company_id, if((SELECT in_company.b_delete FROM in_company WHERE in_company.id = in_worker.company_id) = true, '', in_company.name) AS company_name FROM in_worker INNER JOIN in_code ON in_worker.code_id = in_code.id INNER JOIN in_company ON in_worker.company_id = in_company.id WHERE in_worker.b_delete = false AND in_worker.id = ? ORDER BY in_worker.id;",
        "list": "SELECT in_worker.id, in_worker.code_id, in_code.name AS code_name, in_worker.name, in_worker.telephone, in_worker.phone, in_worker.email, if((SELECT in_company.b_delete FROM in_company WHERE in_company.id = in_worker.company_id) = true, '0' , in_worker.company_id) AS company_id, if((SELECT in_company.b_delete FROM in_company WHERE in_company.id = in_worker.company_id) = true, '', in_company.name) AS company_name FROM in_worker INNER JOIN in_code ON in_worker.code_id = in_code.id INNER JOIN in_company ON in_worker.company_id = in_company.id WHERE in_worker.b_delete = false ORDER BY in_worker.id;",
        "insert": "INSERT INTO in_worker SET ?;",
        "update": "UPDATE in_worker SET ? WHERE ?;",
        "delete": "UPDATE in_worker SET b_delete = true WHERE ?;"
    },
    "in_model": {
        "get": "SELECT in_model.id, in_model.name, in_model.rack_unit, if((SELECT in_company.b_delete FROM in_company WHERE in_company.id = in_model.company_id) = true, '0', in_model.company_id) AS company_id, if((SELECT in_company.b_delete FROM in_company WHERE in_company.id = in_model.company_id) = true, '', in_company.name) AS company_name FROM in_model INNER JOIN in_company ON in_model.company_id = in_company.id WHERE in_model.b_delete = false AND in_model.id = ? ORDER BY in_model.id;",
        "list": "SELECT in_model.id, in_model.name, in_model.rack_unit, if((SELECT in_company.b_delete FROM in_company WHERE in_company.id = in_model.company_id) = true, '0', in_model.company_id) AS company_id, if((SELECT in_company.b_delete FROM in_company WHERE in_company.id = in_model.company_id) = true, '', in_company.name) AS company_name FROM in_model INNER JOIN in_company ON in_model.company_id = in_company.id WHERE in_model.b_delete = false ORDER BY in_model.id;",
        "insert": "INSERT INTO in_model SET ?;",
        "update": "UPDATE in_model SET ? WHERE ?;",
        "delete": "UPDATE in_model SET b_delete = true WHERE ?;"
    },
    "in_model_network": {
        "get": "SELECT in_model_network.id, in_model_network.model_id, in_model_network.network_port, in_model_network.network_type, network_type.name AS network_type_name, in_model_network.network_speed, network_speed.name AS network_speed_name FROM in_model_network INNER JOIN in_code AS network_type ON in_model_network.network_type = network_type.id INNER JOIN in_code AS network_speed ON in_model_network.network_speed = network_speed.id WHERE in_model_network.b_delete = false AND in_model_network.model_id = ?;",
        "insert": "INSERT INTO in_model_network SET ?;",
        "update": "UPDATE in_model_network SET ? WHERE ?;",
        "delete": "UPDATE in_model_network SET b_delete = true WHERE ?;",
        "list": "SELECT * FROM in_model_network WHERE b_delete = false ORDER BY id;"
    },
    "in_model_power": {
        "get": "SELECT * FROM in_model_power WHERE b_delete = false AND model_id = ?;",
        "insert": "INSERT INTO in_model_power SET ?;",
        "update": "UPDATE in_model_power SET ? WHERE ?;",
        "delete": "UPDATE in_model_power SET b_delete = true WHERE ?;",
        "list": "SELECT * FROM in_model_power WHERE b_delete = false ORDER BY id;"
    },
    "in_object": {        
        "get": "SELECT io.id AS object_id, ig.parent_object_id AS object_parent_id, IFNULL(io1.name, '') AS object_parent_name, io.name AS object_name, io.code_id AS object_code_id, ic1.`type` AS object_code_type, ic1.name AS object_code_name, ic1.icon AS object_code_icon, io.image AS object_image_name, ioi.company_id AS company_id, IFNULL(ic.name, '') AS company_name, ioi.manager_id AS manager_id, IFNULL(iw.name, '') AS manager_name, ioi.model_id AS model_id, IFNULL(im.name, '') AS model_name, ioi.operator_id AS operator_id, IFNULL(iw2.name, '') AS operator_name, DATE_FORMAT(ioi.acquisition_date, '%Y/%m/%d') AS inst_date, iom.equip_id AS mapping_id, IFNULL(ce.equip_name, '') AS mapping_name FROM in_object io JOIN in_code ic1 ON io.code_id = ic1.id INNER JOIN in_group ig ON ig.object_id = io.id AND ig.b_delete = 0 LEFT JOIN in_object io1 ON ig.parent_object_id = io1.id LEFT JOIN in_object_info ioi ON io.id = ioi.object_id AND ioi.b_delete = 0 LEFT JOIN in_company ic ON ioi.company_id = ic.id LEFT JOIN in_worker iw ON ioi.manager_id = iw.id LEFT JOIN in_worker iw2 ON ioi.operator_id = iw2.id LEFT JOIN in_model im ON ioi.model_id = im.id LEFT JOIN in_object_mapping iom ON io.id = iom.object_id LEFT JOIN cn_equipment ce ON iom.equip_id = ce.equip_id WHERE io.id = ? ORDER BY ig.parent_object_id, io.name;",
        "list": "SELECT io.id AS object_id, ig.parent_object_id AS object_parent_id, IFNULL(io1.name, '') AS object_parent_name, io.name AS object_name, io.code_id AS object_code_id, ic1.`type` AS object_code_type, ic1.name AS object_code_name, ic1.icon AS object_code_icon, io.image AS object_image_name, ioi.company_id AS company_id, IFNULL(ic.name, '') AS company_name, ioi.manager_id AS manager_id, IFNULL(iw.name, '') AS manager_name, ioi.model_id AS model_id, IFNULL(im.name, '') AS model_name, ioi.operator_id AS operator_id, IFNULL(iw2.name, '') AS operator_name, DATE_FORMAT(ioi.acquisition_date, '%Y/%m/%d') AS inst_date, iom.equip_id AS mapping_id, IFNULL(ce.equip_name, '') AS mapping_name FROM in_object io JOIN in_code ic1 ON io.code_id = ic1.id INNER JOIN in_group ig ON ig.object_id = io.id AND ig.b_delete = 0 LEFT JOIN in_object io1 ON ig.parent_object_id = io1.id LEFT JOIN in_object_info ioi ON io.id = ioi.object_id AND ioi.b_delete = 0 LEFT JOIN in_company ic ON ioi.company_id = ic.id LEFT JOIN in_worker iw ON ioi.manager_id = iw.id LEFT JOIN in_worker iw2 ON ioi.operator_id = iw2.id LEFT JOIN in_model im ON ioi.model_id = im.id LEFT JOIN in_object_mapping iom ON io.id = iom.object_id LEFT JOIN cn_equipment ce ON iom.equip_id = ce.equip_id WHERE io.b_delete = 0 AND io.id IN ($$1) ORDER BY io.code_id != 'I2000', io.name;",
        "info": "SELECT io.id AS object_id, ig.parent_object_id AS object_parent_id, IFNULL(io1.name, '') AS object_parent_name, io.name AS object_name, io.code_id AS object_code_id, ic1.`type` AS object_code_type, ic1.name AS object_code_name, ic1.icon AS object_code_icon, io.image AS object_image_name, ioi.company_id AS company_id, IFNULL(ic.name, '') AS company_name, ioi.manager_id AS manager_id, IFNULL(iw.name, '') AS manager_name, ioi.model_id AS model_id, IFNULL(im.name, '') AS model_name, ioi.operator_id AS operator_id, IFNULL(iw2.name, '') AS operator_name, DATE_FORMAT(ioi.acquisition_date, '%Y/%m/%d') AS inst_date, iom.equip_id AS mapping_id, IFNULL(ce.equip_name, '') AS mapping_name FROM in_object io JOIN in_code ic1 ON io.code_id = ic1.id INNER JOIN in_group ig ON ig.object_id = io.id AND ig.b_delete = 0 LEFT JOIN in_object io1 ON ig.parent_object_id = io1.id LEFT JOIN in_object_info ioi ON io.id = ioi.object_id AND ioi.b_delete = 0 LEFT JOIN in_company ic ON ioi.company_id = ic.id LEFT JOIN in_worker iw ON ioi.manager_id = iw.id LEFT JOIN in_worker iw2 ON ioi.operator_id = iw2.id LEFT JOIN in_model im ON ioi.model_id = im.id LEFT JOIN in_object_mapping iom ON io.id = iom.object_id LEFT JOIN cn_equipment ce ON iom.equip_id = ce.equip_id WHERE io.b_delete = 0 ORDER BY ig.parent_object_id, io.name;",
        "tree": "SELECT io.id AS object_id, ig.parent_object_id AS object_parent_id, io.name AS object_name, io.code_id AS object_code_id, ic1.`type` AS object_code_type, ic1.icon AS object_code_icon FROM in_object io JOIN in_code ic1 ON io.code_id = ic1.id INNER JOIN in_group ig ON ig.object_id = io.id AND ig.b_delete = 0  WHERE io.b_delete = 0 ORDER BY io.code_id != 'I2000', io.name;",
        "insert": "INSERT INTO in_object SET ?;",
        "update": "UPDATE in_object SET ? WHERE ?;",
        "report": {
            "list": "SELECT IFNULL(io1.name, '') AS object_parent_name, io.name AS object_name, ic1.name AS object_code_name, IFNULL(im.name, '') AS model_name, DATE_FORMAT(ioi.acquisition_date, '%Y/%m/%d') AS inst_date, IFNULL(iw2.name, '') AS operator_name, IFNULL(iw.name, '') AS manager_name FROM in_object io JOIN in_code ic1 ON io.code_id = ic1.id INNER JOIN in_group ig ON ig.object_id = io.id AND ig.b_delete = 0 LEFT JOIN in_object io1 ON ig.parent_object_id = io1.id LEFT JOIN in_object_info ioi ON io.id = ioi.object_id AND ioi.b_delete = 0 LEFT JOIN in_worker iw ON ioi.manager_id = iw.id LEFT JOIN in_worker iw2 ON ioi.operator_id = iw2.id LEFT JOIN in_model im ON ioi.model_id = im.id WHERE io.b_delete = 0 AND io.code_id != 'I2000' AND ioi.acquisition_date BETWEEN ? AND ? ORDER BY ioi.acquisition_date;"
        }
    },
    "in_group": {
        "insert": "INSERT INTO in_group SET ?;",
        "update": "UPDATE in_group SET ? WHERE ?;"
    },
    "in_update": {
        "info": "SELECT iu.id, iu.object_id, io.name AS object_name, DATE_FORMAT(iu.`date`, '%Y/%m/%d %H:%i:%s') AS update_date, iu.object_code_id, ic1.name AS object_code_name, iu.event_code_id, ic2.name AS event_code_name, iu.item_name, iu.item_before_data, iu.item_after_data FROM in_update iu JOIN in_code ic1 ON ic1.`type` = 'O' AND iu.object_code_id = ic1.id JOIN in_code ic2 ON ic2.`type` = 'U' AND iu.event_code_id = ic2.id JOIN in_object io ON iu.object_id = io.id WHERE iu.object_id IN ($$1) ORDER BY iu.`date` DESC;",
        "insert": "INSERT INTO in_update SET ?;",
        "report": {
            "list": "SELECT iu.id, iu.object_id, io.name AS object_name, DATE_FORMAT(iu.`date`, '%Y/%m/%d %H:%i:%s') AS update_date, iu.object_code_id, ic1.name AS object_code_name, iu.event_code_id, ic2.name AS event_code_name, IFNULL(iu.item_name, '') AS item_name, IFNULL(iu.item_before_data, '') AS item_before_data, IFNULL(iu.item_after_data, '') AS item_after_data FROM in_update iu JOIN in_code ic1 ON ic1.`type` = 'O' AND iu.object_code_id = ic1.id JOIN in_code ic2 ON ic2.`type` = 'U' AND iu.event_code_id = ic2.id JOIN in_object io ON iu.object_id = io.id WHERE iu.`date` BETWEEN ? AND ? ORDER BY iu.`date` LIMIT 1000;"
        }
    },
    "in_repair": {
        "info": "SELECT ir.id, ir.object_id, io.name AS object_name, ir.work_step_id, ic.name AS work_step_name, DATE_FORMAT(ir.request_date, '%Y/%m/%d') AS request_date, ir.request_worker_id, iw.name AS request_worker_name, ir.request_content, DATE_FORMAT(ir.complete_date, '%Y/%m/%d') AS complete_date, ir.complete_worker_id AS complete_worker_id, iw2.name AS complete_worker_name, ir.complete_content FROM in_repair ir JOIN in_object io ON ir.object_id = io.id JOIN in_code ic ON ic.`type` = 'R' AND ir.work_step_id = ic.id JOIN in_worker iw ON ir.request_worker_id = iw.id JOIN in_worker iw2 ON ir.complete_worker_id = iw2.id WHERE ir.object_id IN ($$1) ORDER BY ir.complete_date ASC;",
        "insert": "INSERT INTO in_repair SET ?;",
        "update": "UPDATE in_repair SET ? WHERE ?;",
        "delete": "DELETE FROM in_repair WHERE ?;",
        "report": {
            "list": "SELECT ir.id, ir.object_id, io.name AS object_name, DATE_FORMAT(ioi.acquisition_date, '%Y/%m/%d') AS acquisition_date, DATE_FORMAT(ir.complete_date, '%Y/%m/%d') AS complete_date, ir.complete_worker_id AS complete_worker_id, iw2.name AS complete_worker_name, ir.complete_content FROM in_repair ir JOIN in_object io ON ir.object_id = io.id JOIN in_object_info ioi ON io.id = ioi.object_id JOIN in_worker iw2 ON ir.complete_worker_id = iw2.id WHERE ir.object_id = ? AND ir.complete_date BETWEEN ? AND ? ORDER BY ir.complete_date DESC;"
        }
    },
    "in_object_info": {
        "insert": "INSERT INTO in_object_info SET ?;",
        "update": "UPDATE in_object_info SET ? WHERE ?;"
    },
    "in_object_mapping": {
        "get": "SELECT * FROM in_object_mapping WHERE object_id = ?;",
        "insert": "INSERT INTO in_object_mapping SET ?;",
        "update": "UPDATE in_object_mapping SET ? WHERE ?;",
        "delete": "DELETE FROM in_object_mapping WHERE ?;"
    },
    "cn_wemb_mapping": {
        "get": "SELECT cw.description, cw.group_ids, cw.equip_ids, cw.sensor_ids, cw.popup_equip_id FROM cn_wemb_mapping cw WHERE ? AND ?;",
        "set": "INSERT INTO cn_wemb_mapping SET ? ON DUPLICATE KEY UPDATE ?;",
        "page": {
            "get": "SELECT cw.object_name, cw.group_ids, cw.equip_ids, cw.sensor_ids, cw.description, cw.popup_equip_id FROM cn_wemb_mapping cw WHERE page_name = ?;"
        }
    },
    "cn_icomer_mapping": {
        "get": "SELECT cw.description, cw.group_ids, cw.equip_ids, cw.sensor_ids, cw.popup_equip_id FROM cn_icomer_mapping cw WHERE ? AND ?;",
        "set": "INSERT INTO cn_icomer_mapping SET ? ON DUPLICATE KEY UPDATE ?;",
        "delete": "DELETE FROM cn_icomer_mapping WHERE ?;",
        "floor": "SELECT cim.page_name, cim.object_name, SUBSTRING_INDEX(cim.group_ids, ',', 1) AS group_id FROM cn_icomer_mapping cim WHERE cim.page_name = ? AND cim.object_name IN ($$1);",
        "page": {
            "get": "SELECT cw.object_name, cw.group_ids, cw.equip_ids, cw.sensor_ids, cw.description, cw.popup_equip_id FROM cn_icomer_mapping cw WHERE page_name = ?;"
        },
        "hvac": {
            "get": "SELECT cim.object_name, ce.equip_id, CASE ce.b_use WHEN 'Y' THEN ce.current_level ELSE 6 END AS equip_level, ce.equip_name, pe.equip_model_name, cs.sensor_id AS ctrlId, cs1.current_value AS temp, CASE cs1.b_event WHEN 'N' THEN -1 ELSE cs1.current_level END AS temp_level, cs1.sensor_id AS temp_id, cs2.current_value AS humi, CASE cs2.b_event WHEN 'N' THEN -1 ELSE cs2.current_level END AS humi_level, cs2.sensor_id AS humi_id, CASE WHEN pc.description != 'constant_temperature' THEN 'stop' WHEN ce.current_level > 3 THEN 'stop' ELSE (SELECT CASE WHEN cs.current_value = 0 AND cst.d_value_0_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 1 AND cst.d_value_1_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 2 AND cst.d_value_2_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 3 AND cst.d_value_3_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 4 AND cst.d_value_4_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 5 AND cst.d_value_5_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 6 AND cst.d_value_6_label IN ('가동', '운전') THEN 'run' WHEN cs.current_value = 7 AND cst.d_value_7_label IN ('가동', '운전') THEN 'run' ELSE 'stop' END AS isRun FROM cn_sensor_threshold cst WHERE cst.sensor_id = cs.sensor_id) END AS isRun FROM cn_icomer_mapping cim JOIN cn_equipment ce ON cim.equip_ids = ce.equip_id JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id JOIN pd_code pc ON pe.equip_code = pc.code_id JOIN (SELECT equip_id, sensor_id, current_value FROM cn_sensor WHERE sensor_code = 'S0019' AND b_delete = 'N' AND b_use = 'Y') cs ON ce.equip_id = cs.equip_id JOIN (SELECT equip_id, sensor_id, current_value, current_level, b_event FROM cn_sensor WHERE sensor_code = 'S0001' AND node_id = 1 AND b_delete = 'N' AND b_use = 'Y') cs1 ON ce.equip_id = cs1.equip_id JOIN (SELECT equip_id, sensor_id, current_value, current_level, b_event FROM cn_sensor WHERE sensor_code = 'S0002' AND node_id = 2 AND b_delete = 'N' AND b_use = 'Y') cs2 ON ce.equip_id = cs2.equip_id WHERE cim.page_name = ?;",
            "object": "SELECT cim.page_name, cim.object_name, MAX(CASE WHEN cg.group_id IS NULL AND ce.equip_id IS NULL THEN (CASE WHEN ce2.current_level > 3 THEN ce2.current_level ELSE cs.current_level END) WHEN cg.group_id IS NULL AND cs.sensor_id IS NULL THEN ce.current_level WHEN ce.equip_id IS NULL AND cs.sensor_id IS NULL THEN cg.current_level END) AS lvl, AVG(cs.current_value) AS val FROM cn_icomer_mapping cim LEFT JOIN cn_group cg ON FIND_IN_SET(cg.group_id, cim.group_ids) LEFT JOIN cn_equipment ce ON FIND_IN_SET(ce.equip_id, cim.equip_ids) LEFT JOIN cn_sensor cs ON FIND_IN_SET(cs.sensor_id, cim.sensor_ids) AND cs.b_delete = 'N' AND cs.b_use = 'Y' JOIN cn_equipment ce2 ON cs.equip_id = ce2.equip_id AND ce2.b_delete = 'N' AND ce2.b_use = 'Y' AND ce2.current_level < 4 WHERE cim.page_name = ? AND FIND_IN_SET(cim.object_name, ?) GROUP BY object_name;"
        },
        "th": {
            "get": "SELECT cim.object_name, ce.equip_id, CASE ce.b_use WHEN 'Y' THEN ce.current_level ELSE 6 END AS equip_level, ce.equip_name, pe.equip_model_name, cs1.sensor_id AS id_1, cs1.current_value AS val_1, CASE cs1.b_event WHEN 'N' THEN -1 ELSE cs1.current_level END AS lvl_1, (SELECT pc1.disp_unit FROM pd_code pc1 WHERE pc1.code_id = cs1.sensor_code) AS unit_1, cs2.sensor_id AS id_2, cs2.current_value AS val_2, CASE cs2.b_event WHEN 'N' THEN -1 ELSE cs2.current_level END AS lvl_2, (SELECT pc1.disp_unit FROM pd_code pc1 WHERE pc1.code_id = cs2.sensor_code) AS unit_2, cs3.sensor_id AS id_3, cs3.current_value AS val_3, CASE cs3.b_event WHEN 'N' THEN -1 ELSE cs3.current_level END AS lvl_3, (SELECT pc1.disp_unit FROM pd_code pc1 WHERE pc1.code_id = cs3.sensor_code) AS unit_3, cs4.sensor_id AS id_4, cs4.current_value AS val_4, CASE cs4.b_event WHEN 'N' THEN -1 ELSE cs4.current_level END AS lvl_4, (SELECT pc1.disp_unit FROM pd_code pc1 WHERE pc1.code_id = cs4.sensor_code) AS unit_4 FROM cn_icomer_mapping cim JOIN cn_equipment ce ON FIND_IN_SET(ce.equip_id, cim.equip_ids) JOIN pd_equipment pe ON ce.pd_equip_id = pe.pd_equip_id LEFT JOIN (SELECT equip_id, sensor_id, current_value, current_level, b_event, sensor_code FROM cn_sensor WHERE node_id = 1 AND b_delete = 'N' AND b_use = 'Y') cs1 ON ce.equip_id = cs1.equip_id LEFT JOIN (SELECT equip_id, sensor_id, current_value, current_level, b_event, sensor_code FROM cn_sensor WHERE node_id = 2 AND b_delete = 'N' AND b_use = 'Y') cs2 ON ce.equip_id = cs2.equip_id LEFT JOIN (SELECT equip_id, sensor_id, current_value, current_level, b_event, sensor_code FROM cn_sensor WHERE node_id = 3 AND b_delete = 'N' AND b_use = 'Y') cs3 ON ce.equip_id = cs3.equip_id LEFT JOIN (SELECT equip_id, sensor_id, current_value, current_level, b_event, sensor_code FROM cn_sensor WHERE node_id = 4 AND b_delete = 'N' AND b_use = 'Y') cs4 ON ce.equip_id = cs4.equip_id WHERE cim.page_name = ?;",
            "object": "SELECT cim.page_name, cim.object_name, MAX(CASE WHEN cg.group_id IS NULL AND ce.equip_id IS NULL THEN (CASE WHEN ce2.current_level > 3 THEN ce2.current_level ELSE cs.current_level END) WHEN cg.group_id IS NULL AND cs.sensor_id IS NULL THEN ce.current_level WHEN ce.equip_id IS NULL AND cs.sensor_id IS NULL THEN cg.current_level END) AS lvl, AVG(cs.current_value) AS val FROM cn_icomer_mapping cim LEFT JOIN cn_group cg ON FIND_IN_SET(cg.group_id, cim.group_ids) LEFT JOIN cn_equipment ce ON FIND_IN_SET(ce.equip_id, cim.equip_ids) LEFT JOIN cn_sensor cs ON FIND_IN_SET(cs.sensor_id, cim.sensor_ids) AND cs.b_delete = 'N' AND cs.b_use = 'Y' JOIN cn_equipment ce2 ON cs.equip_id = ce2.equip_id AND ce2.b_delete = 'N' AND ce2.b_use = 'Y' AND ce2.current_level < 4 WHERE cim.page_name = ? AND FIND_IN_SET(cim.object_name, ?) GROUP BY object_name;"
        },
        "pue": {
            "get": "SELECT cim.object_name, cim.sensor_ids, SUM(cs.current_value) AS val FROM cn_icomer_mapping cim LEFT JOIN (SELECT sensor_id, current_value FROM cn_sensor WHERE b_delete = 'N' AND b_use = 'Y') cs ON FIND_IN_SET(cs.sensor_id, cim.sensor_ids) WHERE cim.page_name = ? AND cim.object_name IN ('total_kw', 'it_kw', 'hvac_kw', 'loss_kw', 'water_kw', 'pue') GROUP BY cim.object_name UNION ALL SELECT 'old_pue' AS object_name, cim2.sensor_ids, SUM(IFNULL(TRUNCATE(sa.avr_value, 2), 0)) AS val FROM cn_icomer_mapping cim2 LEFT JOIN (SELECT * FROM st_aisensor_day sad WHERE DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 DAY), '%Y-%m-%d') = sad.stat_date) sa ON FIND_IN_SET(sa.sensor_id, cim2.sensor_ids) WHERE cim2.page_name = ? AND cim2.object_name = 'pue';",
            "history": "SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL ? MONTH), '%Y.%m') AS `month`, IFNULL(SUM(CASE cim.object_name WHEN 'it_mwh' THEN sam.max_value - sam.min_value ELSE NULL END) / 1000, 0) AS it_mwh, IFNULL(SUM(CASE cim.object_name WHEN 'hvac_mwh' THEN sam.max_value - sam.min_value ELSE NULL END) / 1000, 0) AS hvac_mwh, IFNULL(SUM(CASE cim.object_name WHEN 'loss_mwh' THEN sam.max_value - sam.min_value ELSE NULL END) / 1000, 0) AS loss_mwh FROM st_aisensor_month sam JOIN cn_icomer_mapping cim ON FIND_IN_SET(sam.sensor_id, cim.sensor_ids) WHERE PERIOD_DIFF(DATE_FORMAT(NOW(), '%Y%m'), DATE_FORMAT(sam.stat_date , '%Y%m')) = ? AND cim.page_name = ? AND cim.object_name IN ('it_mwh', 'hvac_mwh', 'loss_mwh');"
        },
        "pss": {
            "hvac": "SELECT cim.object_name, cs.sensor_name, cs.sensor_code, ce.current_level AS equip_lvl, cs.current_level AS lvl, cs.current_value AS val FROM cn_icomer_mapping cim JOIN cn_sensor cs ON FIND_IN_SET(cs.sensor_id, cim.sensor_ids) JOIN cn_equipment ce ON cs.equip_id = ce.equip_id WHERE cim.page_name = ? AND cim.object_name IN ($$1);",
            "th": "SELECT cim.object_name, cs.sensor_name, cs.sensor_code, ce.current_level AS equip_lvl, cs.current_level AS lvl, cs.current_value AS val FROM cn_icomer_mapping cim JOIN cn_sensor cs ON FIND_IN_SET(cs.sensor_id, cim.sensor_ids) JOIN cn_equipment ce ON cs.equip_id = ce.equip_id WHERE cim.page_name = ? AND cim.object_name IN ($$1);",
            "gauge": "SELECT cim.page_name, cim.object_name, AVG(CASE cs.sensor_code WHEN 'S0001' THEN cs.current_value ELSE NULL END) AS temp, AVG(CASE cs.sensor_code WHEN 'S0002' THEN cs.current_value ELSE NULL END) AS humi, MAX(CASE cs.sensor_code WHEN 'S0001' THEN cs.current_value ELSE NULL END) AS max_temp, MAX(CASE cs.sensor_code WHEN 'S0002' THEN cs.current_value ELSE NULL END) AS max_humi, MAX(CASE cs.sensor_code WHEN 'S0001' THEN cs.current_level ELSE NULL END) AS lvl_temp, MAX(CASE cs.sensor_code WHEN 'S0002' THEN cs.current_level ELSE NULL END) AS lvl_humi FROM cn_icomer_mapping cim LEFT JOIN cn_equipment ce ON FIND_IN_SET(ce.equip_id, cim.equip_ids) AND ce.b_delete <> 'Y' AND ce.b_use = 'Y' AND ce.current_level < 4  LEFT JOIN cn_sensor cs ON ce.equip_id = cs.equip_id AND cs.b_delete <> 'Y' AND cs.b_use = 'Y' WHERE cim.page_name = ? AND FIND_IN_SET(cim.object_name, ?) GROUP BY cim.object_name;",
            "panel": "SELECT cim.page_name, cim.object_name, cs.sensor_name, cs.sensor_code AS code, cs.current_value AS val, cs.current_level AS lvl, ce.current_level AS equip_lvl FROM cn_icomer_mapping cim LEFT JOIN cn_sensor cs ON FIND_IN_SET(cs.sensor_id, cim.sensor_ids) AND cs.b_delete <> 'Y' AND cs.b_use = 'Y' LEFT JOIN cn_equipment ce ON cs.equip_id = ce.equip_id WHERE page_name = ? AND object_name IN ($$1);",
            "power": "SELECT cim.page_name, cim.object_name, SUM(cs.current_value) AS val FROM cn_icomer_mapping cim LEFT JOIN cn_sensor cs ON FIND_IN_SET(cs.sensor_id, cim.sensor_ids) AND cs.b_delete <> 'Y' AND cs.b_use = 'Y' JOIN cn_equipment ce ON cs.equip_id = ce.equip_id AND ce.b_delete <> 'Y' AND ce.b_use = 'Y' AND ce.current_level < 4 WHERE page_name = ? AND object_name IN ($$1) GROUP BY cim.object_name;",
            "powerChart": "SELECT DATE_FORMAT(DATE_SUB(NOW(), INTERVAL ? MONTH), '%Y년.%m월') AS `month`, IFNULL(SUM(CASE cim.object_name WHEN 'kwh_it' THEN TRUNCATE((sam.max_value - sam.min_value) / 1000, 1) ELSE NULL END), 0) AS kwh_it, IFNULL(SUM(CASE cim.object_name WHEN 'kwh_hvac' THEN TRUNCATE((sam.max_value - sam.min_value) / 1000, 1) ELSE NULL END), 0) AS kwh_hvac FROM st_aisensor_month sam JOIN cn_icomer_mapping cim ON FIND_IN_SET(sam.sensor_id, cim.sensor_ids) WHERE PERIOD_DIFF(DATE_FORMAT(NOW(), '%Y%m'), DATE_FORMAT(sam.stat_date, '%Y%m')) = ? AND cim.page_name = ? AND cim.object_name IN ('kwh_it','kwh_hvac');",
            "ups": "SELECT cim.page_name, cim.object_name, cs.sensor_code AS code, cs.current_value AS val, cs.current_level AS lvl, ce.current_level AS equip_lvl, CASE WHEN cs.sensor_code = 'S0004' THEN CASE cs.current_value WHEN 0 THEN cst.d_value_0_label WHEN 1 THEN cst.d_value_1_label WHEN 2 THEN cst.d_value_2_label WHEN 3 THEN cst.d_value_3_label WHEN 4 THEN cst.d_value_4_label WHEN 5 THEN cst.d_value_5_label WHEN 6 THEN cst.d_value_6_label WHEN 7 THEN cst.d_value_7_label END ELSE NULL END AS mode FROM cn_icomer_mapping cim LEFT JOIN cn_sensor cs ON FIND_IN_SET(cs.sensor_id, cim.sensor_ids) AND cs.b_delete <> 'Y' AND cs.b_use = 'Y' LEFT JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id JOIN cn_equipment ce ON cs.equip_id = ce.equip_id AND ce.b_delete <> 'Y' AND ce.b_use = 'Y' AND ce.current_level < 4 WHERE cim.page_name = ? AND cim.object_name IN ($$1);",
            "threshold": "SELECT cim.object_name, cst.a_warning_min AS w_min, cst.a_warning_max AS w_max FROM cn_icomer_mapping cim JOIN cn_sensor cs ON FIND_IN_SET(cs.sensor_id, cim.sensor_ids) JOIN cn_sensor_threshold cst ON cs.sensor_id = cst.sensor_id WHERE cim.page_name = ? AND cim.object_name IN ($$1);"
        },
        "didc": {
            "equipmentlist": "SELECT ce.equip_id, ce.equip_name, pc.code_name AS equip_type, CASE WHEN ce.b_use = 'N' THEN 6 ELSE ce.current_level END AS lvl FROM cn_icomer_mapping cim JOIN cn_equipment ce ON FIND_IN_SET(ce.equip_id, cim.equip_ids) JOIN pd_equipment pe ON pe.pd_equip_id = ce.pd_equip_id JOIN pd_code pc ON pc.code_id = pe.equip_code WHERE cim.page_name = ? AND cim.object_name = ? ORDER BY ce.equip_name;",
            "temphumi": "SELECT cim.object_name AS id, cim.description AS title, TRUNCATE(AVG(CASE WHEN cs.sensor_code = 'S0001' THEN cs.current_value ELSE NULL END), 1) AS temp, TRUNCATE(AVG(CASE WHEN cs.sensor_code = 'S0002' THEN cs.current_value ELSE NULL END), 1) AS humi, MAX(CASE WHEN cs.sensor_code = 'S0001' THEN cs.current_level ELSE NULL END) AS temp_lvl, MAX(CASE WHEN cs.sensor_code = 'S0002' THEN cs.current_level ELSE NULL END) AS humi_lvl FROM cn_icomer_mapping cim JOIN cn_equipment ce ON FIND_IN_SET(ce.equip_id, cim.equip_ids) AND ce.b_use = 'Y' AND ce.b_delete = 'N' JOIN cn_sensor cs ON cs.equip_id = ce.equip_id AND cs.b_use = 'Y' AND cs.b_delete = 'N' AND cs.sensor_code IN ('S0001', 'S0002') WHERE cim.page_name = 'i_dashboard' AND cim.object_name IN ($$1) GROUP BY cim.object_name;",
            "icon": "SELECT cim.object_name AS id, MAX(ce.current_level) AS lvl FROM cn_icomer_mapping cim JOIN cn_equipment ce ON FIND_IN_SET(ce.equip_id, cim.equip_ids) AND ce.b_use = 'Y' AND ce.b_delete = 'N' AND ce.current_status = 1 WHERE cim.page_name = 'i_dashboard' AND cim.object_name IN ($$1) GROUP BY cim.object_name;",
            "alert": "SELECT cim.object_name AS id, IFNULL(cim.description, '') AS title, MAX(ce.current_level) AS lvl FROM cn_icomer_mapping cim LEFT JOIN cn_equipment ce ON FIND_IN_SET(ce.equip_id, cim.equip_ids) AND ce.b_use = 'Y' AND ce.b_delete = 'N' AND ce.current_status = 1 WHERE cim.page_name = 'i_dashboard' AND cim.object_name IN ($$1) GROUP BY cim.object_name;",
            "hvacrun": "SELECT cim.object_name AS id, IFNULL(cim.description, '') AS title, SUM(CASE WHEN cs.current_value = 1 THEN 1 ELSE 0 END) AS run_count, COUNT(1) AS total FROM cn_icomer_mapping cim JOIN cn_equipment ce ON FIND_IN_SET(ce.equip_id, cim.equip_ids) AND ce.b_use = 'Y' AND ce.b_delete = 'N' JOIN cn_sensor cs ON ce.equip_id = cs.equip_id AND cs.sensor_code = 'S0019' AND cs.b_use = 'Y' AND cs.b_delete = 'N' WHERE cim.page_name = 'i_dashboard' AND cim.object_name IN ($$1) GROUP BY cim.object_name;",
            "power": "SELECT cim.object_name AS id, IFNULL(cim.description, '') AS title, SUM(CASE WHEN cs.sensor_code = 'S0009' THEN TRUNCATE(cs.current_value, 1) ELSE NULL END) AS kw, SUM(CASE WHEN cs.sensor_code = 'S0012' THEN TRUNCATE(cs.current_value, 1) ELSE NULL END) AS kwh, (SELECT pc1.disp_unit FROM pd_code pc1 WHERE pc1.code_id = 'S0009') AS kw_unit, (SELECT pc2.disp_unit FROM pd_code pc2 WHERE pc2.code_id = 'S0012') AS kwh_unit FROM cn_icomer_mapping cim LEFT JOIN cn_equipment ce ON FIND_IN_SET(ce.equip_id, cim.equip_ids) AND ce.b_use = 'Y' AND ce.b_delete = 'N' LEFT JOIN cn_sensor cs ON ce.equip_id = cs.equip_id AND cs.b_use = 'Y' AND cs.b_delete = 'N' AND cs.sensor_code IN ('S0009', 'S0012') WHERE cim.page_name = 'i_dashboard' AND cim.object_name IN ($$1) GROUP BY cim.object_name;",
            "pue": "SELECT cim.object_name AS id, TRUNCATE(AVG(cs.current_value), 2) AS pue FROM cn_icomer_mapping cim JOIN cn_equipment ce ON FIND_IN_SET(ce.equip_id, cim.equip_ids) AND ce.b_use = 'Y' AND ce.b_delete = 'N' JOIN cn_sensor cs ON ce.equip_id = cs.equip_id AND cs.b_use = 'Y' AND cs.b_delete = 'N' WHERE cim.page_name = 'i_dashboard' AND cim.object_name IN ($$1) GROUP BY cim.object_name LIMIT 1;",
            "wind": "SELECT cim.object_name AS id, MAX(ce.current_level) AS lvl, TRUNCATE(MAX(cs.current_value), 1) AS max_val, TRUNCATE(AVG(cs.current_value), 1) AS avg_val, TRUNCATE(MIN(cs.current_value), 1) AS min_val FROM cn_icomer_mapping cim LEFT JOIN cn_equipment ce ON FIND_IN_SET(ce.equip_id, cim.equip_ids) AND ce.b_use = 'Y' AND ce.b_delete = 'N' AND ce.current_status = 1 LEFT JOIN cn_sensor cs ON ce.equip_id = cs.equip_id WHERE cim.page_name = 'i_dashboard' AND cim.object_name IN ($$1);",
            "containmentlist": "SELECT cim.id, cim.object_name, cim.description AS name, cim.equip_ids, t1.equip_name AS max_equip_name, MAX(t1.current_value) AS max_val, TRUNCATE(AVG(t1.current_value), 1) AS avg_val FROM cn_icomer_mapping cim LEFT JOIN (SELECT ce.equip_id AS equip_id, ce.equip_name, cs.sensor_id, cs.sensor_name, cs.current_value FROM cn_sensor cs JOIN cn_equipment ce ON cs.equip_id = ce.equip_id AND ce.b_delete = 'N' AND ce.b_use = 'Y' WHERE cs.sensor_code = 'S0001' AND cs.b_delete = 'N' AND cs.b_use = 'Y' ORDER BY cs.current_value DESC, ce.equip_name LIMIT 10000000) t1 ON FIND_IN_SET(t1.equip_id, cim.equip_ids) WHERE cim.page_name = ? AND cim.object_name LIKE 'i-containment-%' GROUP BY cim.object_name;",
            "containmentchart": "SELECT DATE_FORMAT(sah.stat_date, '%m/%d %H:%i') AS stat_date, TRUNCATE(AVG(TRUNCATE(sah.avr_value, 1)), 1) AS val, TRUNCATE(MAX(TRUNCATE(sah.max_value, 1)), 1) AS max_val FROM st_aisensor_hour sah JOIN cn_equipment ce ON sah.equip_id = ce.equip_id AND ce.b_delete = 'N' AND ce.b_use = 'Y' JOIN cn_sensor cs ON cs.sensor_code = 'S0001' AND cs.b_delete = 'N' AND cs.b_use = 'Y' AND sah.sensor_id = cs.sensor_id WHERE sah.stat_date BETWEEN ADDDATE(NOW(), INTERVAL -1 DAY) AND NOW() AND ce.equip_id IN ($$1) GROUP BY sah.stat_date;"
        }
    }
}